{"ast":null,"code":"import { FormControl, Validators } from \"@angular/forms\";\nimport { EMPTY, catchError } from \"rxjs\";\nimport { tap, switchMap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/recipe.service\";\nimport * as i4 from \"src/app/services/diet-book.service\";\nimport * as i5 from \"src/app/services/shared.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../../directive/autofocus.directive\";\nfunction RecipeFormComponent_form_0_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 12)(2, \"label\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 14);\n    i0.ɵɵelementStart(5, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function RecipeFormComponent_form_0_div_12_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.removeIngredient(i_r3));\n    });\n    i0.ɵɵtext(6, \"-\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"ingredient\", i_r3, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Ingredient\", i_r3 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", i_r3);\n  }\n}\nfunction RecipeFormComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"label\", 6);\n    i0.ɵɵtext(6, \"Titre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 8)(10, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function RecipeFormComponent_form_0_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.addIngredient());\n    });\n    i0.ɵɵtext(11, \" Ajouter un ingr\\u00E9dient \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, RecipeFormComponent_form_0_div_12_Template, 7, 3, \"div\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(13, \"div\", 4)(14, \"div\", 4)(15, \"div\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"div\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.recipeForm);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.ingredientListControls);\n  }\n}\nexport class RecipeFormComponent {\n  constructor(formBuilder, router, Recipes, route, dietBooks, sharedService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.Recipes = Recipes;\n    this.route = route;\n    this.dietBooks = dietBooks;\n    this.sharedService = sharedService;\n    this.ingredientListControls = [];\n  }\n  ngOnInit() {\n    this.loading = true;\n    this.recipeId = this.route.snapshot.queryParams[\"recipeId\"];\n    this.route.queryParams.pipe(switchMap(params => {\n      if (!this.recipeId) {\n        this.mode = \"new\";\n        this.loading = false;\n        this.initEmptyForm();\n        this.sharedService.setTextHeader(`Nouvelle Recette`);\n        return EMPTY;\n      } else {\n        this.mode = \"edit\";\n        this.sharedService.setTextHeader(`Recette N° ${this.recipeId}`);\n        return this.Recipes.getRecipeById(params[\"recipeId\"]);\n      }\n    }), tap(recipe => {\n      if (recipe) {\n        this.recipeBook = recipe;\n        console.log(this.recipeBook);\n        this.loading = false;\n        this.initModifyForm(this.recipeBook);\n      }\n    }), catchError(error => this.errorMsg = JSON.stringify(error))).subscribe();\n  }\n  initEmptyForm() {\n    this.recipeForm = this.formBuilder.group({\n      title: new FormControl(\"\", Validators.required),\n      dietbookIds: new FormControl(\"\"),\n      ingredients: new FormControl(\"\"),\n      recipe: new FormControl(\"\"),\n      preparationTime: new FormControl(\"\"),\n      cookingTime: new FormControl(\"\"),\n      breakTime: new FormControl(\"\"),\n      online: new FormControl(false)\n    });\n  }\n  addIngredient() {\n    const newIngredientControl = this.formBuilder.control(\"\");\n    this.ingredientListControls.push(newIngredientControl);\n    this.recipeForm.get(\"collationList\").push(newIngredientControl);\n  }\n  removeIngredient(index) {\n    this.ingredientListControls.splice(index, 1);\n    this.recipeForm.get(\"collationList\").removeAt(index);\n  }\n  initModifyForm(recipebook) {\n    console.log(recipebook);\n    this.recipeForm = this.formBuilder.group({\n      id: recipebook.id,\n      title: recipebook.title,\n      // dietBookIds: recipebook.dietBookIds,\n      // ingredients: recipebook.ingredients,\n      // recipe: recipebook.recipe,\n      preparationTime: recipebook.preparationTime,\n      cookingTime: recipebook.cookingTime,\n      breakTime: recipebook.breakTime,\n      online: recipebook.online\n    });\n    console.log(!this.recipeForm.value ? \"il n'y a pas de recipeForm\" : `\"voici le recipeForm : ${this.recipeForm.value}`);\n  }\n  static #_ = this.ɵfac = function RecipeFormComponent_Factory(t) {\n    return new (t || RecipeFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RecipeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i4.DietBooksService), i0.ɵɵdirectiveInject(i5.SharedService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeFormComponent,\n    selectors: [[\"app-recipe-form\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"row_entire\"], [1, \"border\", \"col\"], [1, \"border\", \"col3\"], [1, \"form-group\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [\"formArrayName\", \"ingredientList\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"border\", \"col1\"], [1, \"form-group\", \"ingredientList\"], [3, \"for\"], [\"autofocus\", \"\", \"type\", \"text\", \"appAutofocus\", \"\", 1, \"ingredientInput\", 3, \"formControlName\"]],\n    template: function RecipeFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, RecipeFormComponent_form_0_Template, 17, 2, \"form\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.recipeForm);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName, i7.AutofocusDirective],\n    styles: [\".border[_ngcontent-%COMP%] {\\n  border: 1px solid black;\\n}\\n\\n.col[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-flow: column;\\n  width: 75%;\\n  align-items: center;\\n}\\n.col3[_ngcontent-%COMP%] {\\n  width: 80%;\\n  height: auto;\\n  min-height: 75px;\\n  justify-content: center;\\n}\\n.col1[_ngcontent-%COMP%] {\\n  width: 25%;\\n  height: auto;\\n}\\n\\n.row_entire[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-flow: row;\\n  width: 90%;\\n  margin: 0 auto;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  margin-right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGl2cmV0cy9yZWNpcGUvcmVjaXBlLWZvcm0vcmVjaXBlLWZvcm0uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi9TaXRlJTIwV2ViL0JEMiUyMEtvbmVjdC9Gcm9udGVuZC9zcmMvYXBwL2xpdnJldHMvcmVjaXBlL3JlY2lwZS1mb3JtL3JlY2lwZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQUE7QUNDRjs7QURDQTtFQUNFLGFBQUE7RUFDQSxpQkFBQTtFQUNBLFVBQUE7RUFDQSxtQkFBQTtBQ0VGO0FEQUU7RUFDRSxVQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsdUJBQUE7QUNFSjtBREFFO0VBQ0UsVUFBQTtFQUNBLFlBQUE7QUNFSjs7QURFRTtFQUNFLGFBQUE7RUFDQSxjQUFBO0VBQ0EsVUFBQTtFQUNBLGNBQUE7QUNDSjs7QURFQTtFQUNFLGtCQUFBO0FDQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9yZGVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG59XG4uY29sIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW47XG4gIHdpZHRoOiA3NSU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgJjMge1xuICAgIHdpZHRoOiA4MCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1pbi1oZWlnaHQ6IDc1cHg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cbiAgJjEge1xuICAgIHdpZHRoOiAyNSU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG59XG4ucm93IHtcbiAgJl9lbnRpcmUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3c7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgfVxufVxubGFiZWwge1xuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG59XG4iLCIuYm9yZGVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG59XG5cbi5jb2wge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbjtcbiAgd2lkdGg6IDc1JTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5jb2wzIHtcbiAgd2lkdGg6IDgwJTtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtaW4taGVpZ2h0OiA3NXB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cbi5jb2wxIHtcbiAgd2lkdGg6IDI1JTtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4ucm93X2VudGlyZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93O1xuICB3aWR0aDogOTAlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxubGFiZWwge1xuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["FormControl","Validators","EMPTY","catchError","tap","switchMap","i0","RecipeFormComponent","constructor","formBuilder","router","Recipes","route","dietBooks","sharedService","ngOnInit","loading","recipeId","snapshot","queryParams","pipe","params","mode","initEmptyForm","setTextHeader","getRecipeById","recipe","recipeBook","console","log","initModifyForm","error","errorMsg","JSON","stringify","subscribe","recipeForm","group","title","required","dietbookIds","ingredients","preparationTime","cookingTime","breakTime","online","addIngredient","newIngredientControl","control","ingredientListControls","push","get","removeIngredient","index","splice","removeAt","recipebook","id","value","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/livrets/recipe/recipe-form/recipe-form.component.ts","/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/livrets/recipe/recipe-form/recipe-form.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n  FormArray,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, EMPTY, catchError } from \"rxjs\";\nimport { tap, map, switchMap } from \"rxjs/operators\";\nimport { Recipe } from \"src/app/models/recipe.model\";\nimport { DietBooksService } from \"src/app/services/diet-book.service\";\nimport { RecipeService } from \"src/app/services/recipe.service\";\nimport { SharedService } from \"src/app/services/shared.service\";\n\n@Component({\n  selector: \"app-recipe-form\",\n  templateUrl: \"./recipe-form.component.html\",\n  styleUrls: [\"./recipe-form.component.scss\"],\n})\nexport class RecipeFormComponent implements OnInit {\n  recipeForm!: FormGroup;\n  errorMsg!: string;\n  mode!: string;\n  recipeId!: number;\n  loading!: boolean;\n  recipeBook!: Recipe;\n  recipeBook$!: Observable<Recipe>;\n  ingredientListControls: FormControl[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private Recipes: RecipeService,\n    private route: ActivatedRoute,\n    private dietBooks: DietBooksService,\n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.recipeId = this.route.snapshot.queryParams[\"recipeId\"];\n\n    this.route.queryParams\n      .pipe(\n        switchMap((params) => {\n          if (!this.recipeId) {\n            this.mode = \"new\";\n            this.loading = false;\n            this.initEmptyForm();\n            this.sharedService.setTextHeader(`Nouvelle Recette`);\n            return EMPTY;\n          } else {\n            this.mode = \"edit\";\n            this.sharedService.setTextHeader(`Recette N° ${this.recipeId}`);\n            return this.Recipes.getRecipeById(params[\"recipeId\"]);\n          }\n        }),\n        tap((recipe) => {\n          if (recipe) {\n            this.recipeBook = recipe;\n            console.log(this.recipeBook);\n            this.loading = false;\n            this.initModifyForm(this.recipeBook);\n          }\n        }),\n        catchError((error) => (this.errorMsg = JSON.stringify(error)))\n      )\n      .subscribe();\n  }\n\n  initEmptyForm() {\n    this.recipeForm = this.formBuilder.group({\n      title: new FormControl(\"\", Validators.required),\n      dietbookIds: new FormControl(\"\"),\n      ingredients: new FormControl(\"\"),\n      recipe: new FormControl(\"\"),\n      preparationTime: new FormControl(\"\"),\n      cookingTime: new FormControl(\"\"),\n      breakTime: new FormControl(\"\"),\n      online: new FormControl(false),\n    });\n  }\n  addIngredient() {\n    const newIngredientControl = this.formBuilder.control(\"\");\n    this.ingredientListControls.push(newIngredientControl);\n    (this.recipeForm.get(\"collationList\") as FormArray).push(\n      newIngredientControl\n    );\n  }\n\n  removeIngredient(index: number) {\n    this.ingredientListControls.splice(index, 1);\n    (this.recipeForm.get(\"collationList\") as FormArray).removeAt(index);\n  }\n\n  initModifyForm(recipebook: Recipe) {\n    console.log(recipebook);\n    this.recipeForm = this.formBuilder.group({\n      id: recipebook.id,\n      title: recipebook.title,\n      // dietBookIds: recipebook.dietBookIds,\n      // ingredients: recipebook.ingredients,\n      // recipe: recipebook.recipe,\n      preparationTime: recipebook.preparationTime,\n      cookingTime: recipebook.cookingTime,\n      breakTime: recipebook.breakTime,\n      online: recipebook.online,\n    });\n    console.log(\n      !this.recipeForm.value\n        ? \"il n'y a pas de recipeForm\"\n        : `\"voici le recipeForm : ${this.recipeForm.value}`\n    );\n  }\n}\n","<form *ngIf=\"recipeForm\" [formGroup]=\"recipeForm\">\n  <div class=\"row_entire\">\n    <div class=\"border col\">\n      <div class=\"border col3\">\n        <div class=\"form-group\">\n          <label for=\"title\">Titre</label>\n          <input id=\"title\" type=\"text\" formControlName=\"title\" />\n        </div>\n      </div>\n      <div class=\"border col3\">\n        <div formArrayName=\"ingredientList\">\n          <button type=\"button\" (click)=\"addIngredient()\">\n            Ajouter un ingrédient\n          </button>\n          <div\n            *ngFor=\"\n              let ingredientControl of ingredientListControls;\n              let i = index\n            \"\n          >\n            <div class=\"form-group ingredientList\">\n              <label for=\"ingredient{{ i }}\">Ingredient{{ i + 1 }}</label>\n              <input\n                class=\"ingredientInput\"\n                autofocus\n                type=\"text\"\n                [formControlName]=\"i\"\n                appAutofocus\n              />\n              <button type=\"button\" (click)=\"removeIngredient(i)\">-</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"border col3\"></div>\n      <div class=\"border col3\"></div>\n      <div class=\"border col3\"></div>\n    </div>\n    <div class=\"border col1\"></div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}