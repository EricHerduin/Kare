{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport class SharedService {\n  constructor() {\n    this.textHeaderSubject = new BehaviorSubject(\"\");\n  }\n  setTextHeader(text) {\n    this.textHeaderSubject.next(text);\n  }\n  getTextHeader() {\n    return this.textHeaderSubject.asObservable();\n  }\n  static #_ = this.ɵfac = function SharedService_Factory(t) {\n    return new (t || SharedService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SharedService,\n    factory: SharedService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,aAAa;EAH1BC;IAIU,sBAAiB,GAAG,IAAIF,eAAe,CAAS,EAAE,CAAC;;EAE3DG,aAAa,CAACC,IAAY;IACxB,IAAI,CAACC,iBAAiB,CAACC,IAAI,CAACF,IAAI,CAAC;EACnC;EAEAG,aAAa;IACX,OAAO,IAAI,CAACF,iBAAiB,CAACG,YAAY,EAAE;EAC9C;EAAC;qBATUP,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAQ,SAAbR,aAAa;IAAAS,YAFZ;EAAM","names":["BehaviorSubject","SharedService","constructor","setTextHeader","text","textHeaderSubject","next","getTextHeader","asObservable","factory","providedIn"],"sourceRoot":"","sources":["/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/services/shared.service.ts"],"sourcesContent":["// shared.service.ts\n\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SharedService {\n  private textHeaderSubject = new BehaviorSubject<string>(\"\");\n\n  setTextHeader(text: string) {\n    this.textHeaderSubject.next(text);\n  }\n\n  getTextHeader(): Observable<string> {\n    return this.textHeaderSubject.asObservable();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}