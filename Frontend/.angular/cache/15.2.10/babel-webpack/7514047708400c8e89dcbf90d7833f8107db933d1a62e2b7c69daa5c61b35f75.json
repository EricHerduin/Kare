{"ast":null,"code":"import { ConfirmationDialogComponent } from \"src/app/core/confirmation-dialog/confirmation-dialog.component\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport { DietBook } from \"src/app/models/diet.model\";\nimport { catchError, EMPTY } from \"rxjs\";\nimport { map, switchMap, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/diet-book.service\";\nimport * as i4 from \"src/app/services/meal.service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"src/app/services/snackBar.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/radio\";\nimport * as i9 from \"@angular/material/slide-toggle\";\nfunction DietFormComponent_h2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \"Nouveau Livret\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DietFormComponent_h2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1, \"Modification du livret\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DietFormComponent_p_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"s\\u00E9lectionnez une pathologie\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DietFormComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const pathology_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", pathology_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pathology_r6.name, \" \");\n  }\n}\nfunction DietFormComponent_button_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function DietFormComponent_button_44_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onSubmitForm());\n    });\n    i0.ɵɵtext(1, \" Cr\\u00E9er \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DietFormComponent_button_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function DietFormComponent_button_45_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.openConfirmationDialog());\n    });\n    i0.ɵɵtext(1, \" Valider \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class DietFormComponent {\n  constructor(formBuilder, router, dietBooks, dietMeals, route, dialog, messageService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.dietBooks = dietBooks;\n    this.dietMeals = dietMeals;\n    this.route = route;\n    this.dialog = dialog;\n    this.messageService = messageService;\n    this.buttonCreate = false;\n  }\n  ngOnInit() {\n    this.myPathologies = [{\n      id: 1,\n      name: \"Sans pathologie\"\n    }, {\n      id: 2,\n      name: \"Anémie\"\n    }, {\n      id: 3,\n      name: \"Athérosclérose/thrombose\"\n    }, {\n      id: 4,\n      name: \"Cholestérol\"\n    }, {\n      id: 5,\n      name: \"Diabète\"\n    }, {\n      id: 6,\n      name: \"Femme enceinte\"\n    }, {\n      id: 7,\n      name: \"Hypertension\"\n    }, {\n      id: 8,\n      name: \"Hyperthyroïdie\"\n    }, {\n      id: 9,\n      name: \"Hypothyroïdie\"\n    }, {\n      id: 10,\n      name: \"Lombalgie/lumbago\"\n    }, {\n      id: 11,\n      name: \"Maladie de cœliaque\"\n    }, {\n      id: 12,\n      name: \"Maladie de crohn\"\n    }, {\n      id: 13,\n      name: \"Maladie hépatique/hépatite\"\n    }, {\n      id: 14,\n      name: \"Ménopause\"\n    }, {\n      id: 15,\n      name: \"Ostéoporose\"\n    }, {\n      id: 16,\n      name: \"Perte de poids rapide\"\n    }, {\n      id: 17,\n      name: \"Post infarctus\"\n    }, {\n      id: 18,\n      name: \"Sarcopénie\"\n    }, {\n      id: 19,\n      name: \"Sédentaire\"\n    }, {\n      id: 20,\n      name: \"Spondylarthrite\"\n    }, {\n      id: 21,\n      name: \"Sportif : activités endurantes\"\n    }, {\n      id: 22,\n      name: \"Sportif: activité de force\"\n    }, {\n      id: 23,\n      name: \"Triglycérides\"\n    }, {\n      id: 24,\n      name: \"Urée\"\n    }];\n    this.loading = true;\n    this.dietBookId = this.route.snapshot.queryParams[\"dietId\"];\n    this.route.queryParams.pipe(switchMap(params => {\n      if (!this.dietBookId) {\n        this.mode = \"new\";\n        this.initEmptyForm();\n        this.buttonCreate = true;\n        this.loading = false;\n        return EMPTY;\n      } else {\n        this.mode = \"edit\";\n        return this.dietBooks.getDietBookById(params[\"dietId\"]);\n      }\n    }), tap(dietbook => {\n      if (dietbook) {\n        this.dietBook = dietbook;\n        this.initModifiyForm(dietbook);\n        this.loading = false;\n      }\n    }), catchError(error => this.errorMsg = JSON.stringify(error))).subscribe();\n  }\n  initEmptyForm() {\n    this.dietBookForm = this.formBuilder.group({\n      title: new FormControl(\"\", Validators.required),\n      pathology: new FormControl(\"\", Validators.required),\n      sexe: new FormControl(\"\"),\n      nbStage: new FormControl(\"4\"),\n      nbWeekPerStage: new FormControl(\"3\"),\n      description: new FormControl(\"\"),\n      id: new FormControl(\"0\"),\n      online: new FormControl(false) // Initialiser à false (hors ligne)\n    });\n  }\n\n  initModifiyForm(dietbook) {\n    this.dietBookForm = this.formBuilder.group({\n      id: dietbook.id,\n      title: dietbook.title,\n      pathology: dietbook.pathology,\n      nbStage: dietbook.nbStage,\n      nbWeekPerStage: dietbook.nbWeekPerStage,\n      description: dietbook.description,\n      online: dietbook.online === false ? 0 : dietbook.online,\n      sexe: dietbook.sexe\n    });\n    this.selectedPathology = this.dietBookForm.get(\"pathology\").value;\n  }\n  openConfirmationDialog() {\n    let message = \"Êtes-vous sûr de vouloir modifier ce livret ?\";\n    let stagesToRemove = [];\n    let diffMessage = \"\";\n    if (this.dietBook.nbStage > this.dietBookForm.get(\"nbStage\").value) {\n      const difference = this.dietBook.nbStage - this.dietBookForm.get(\"nbStage\").value;\n      if (difference > 1) {\n        diffMessage = \"Sélectionnez les \" + difference + \" étapes à supprimer\\n\";\n      } else {\n        diffMessage = \"Sélectionnez l'étape à supprimer\\n\";\n      }\n      message = \"Le nombre d'étape a diminué.\\n En validant, les étapes seront supprimées des repas.\\n \" + diffMessage + message;\n      // Création d'une instance de StageToRemove pour chaque étape\n      for (let i = 1; i <= this.dietBook.nbStage; i++) {\n        stagesToRemove.push({\n          value: i,\n          selected: false\n        });\n      }\n    }\n    this.dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      width: \"500px\",\n      data: {\n        message: message,\n        stagesToRemove: stagesToRemove\n      },\n      panelClass: \"custom-dialog-container\"\n    });\n    this.dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        if (this.dietBook.nbStage > this.dietBookForm.get(\"nbStage\").value) {\n          const StageToRemoveSelected = stagesToRemove.filter(stage => stage.selected === true);\n          // Supprimer les étapes des repas\n          this.onSubmitFormStageChanged(result, StageToRemoveSelected, this.dietBook.nbStage);\n          this.onSubmitForm();\n        } else {\n          // Mettre à jour normalement\n          this.onSubmitForm();\n        }\n      }\n    });\n  }\n  onSubmitForm() {\n    this.loading = true;\n    const newDietBook = new DietBook();\n    newDietBook.title = this.dietBookForm.get(\"title\").value;\n    newDietBook.pathology = this.dietBookForm.get(\"pathology\").value;\n    newDietBook.nbStage = this.dietBookForm.get(\"nbStage\").value;\n    newDietBook.nbWeekPerStage = this.dietBookForm.get(\"nbWeekPerStage\").value;\n    newDietBook.description = this.dietBookForm.get(\"description\").value;\n    newDietBook.sexe = this.dietBookForm.controls[\"sexe\"].value;\n    newDietBook.online = this.dietBookForm.get(\"online\").value;\n    if (this.mode === \"new\") {\n      this.dietBooks.addDietBook(this.dietBookForm.value).pipe(tap(() => {\n        this.loading = false;\n        this.messageService.showMessage(\"le Livret d'Equilibrage alimentaire a bien été créé\");\n        this.router.navigateByUrl(`dietbooks`);\n      }), catchError(error => {\n        console.error(error);\n        this.loading = false;\n        this.messageService.showErrorMessage(\"Une erreur s'est produite lors de la création.\");\n        this.errorMsg = error.message;\n        return EMPTY;\n      })).subscribe();\n    } else if (this.mode === \"edit\") {\n      console.log(this.dietBookForm.value);\n      this.dietBooks.modifyDietBook(this.dietBookId, this.dietBookForm.value).pipe(tap(() => {\n        this.loading = false;\n        this.messageService.showMessage(\"Les Modifications sont bien enregistrées\");\n        this.router.navigateByUrl(`dietbook?dietId=${this.dietBookId}`);\n      }), catchError(error => {\n        console.error(error);\n        this.loading = false;\n        this.messageService.showErrorMessage(\"Une erreur s'est produite lors de la modification.\");\n        this.errorMsg = error.message;\n        return EMPTY;\n      })).subscribe();\n    }\n  }\n  onSubmitFormStageChanged(result, StageToRemoveSelected, newNbStage) {\n    StageToRemoveSelected = StageToRemoveSelected.sort((a, b) => b.value - a.value);\n    this.dietBooks.getDietBookById(this.dietBookId).subscribe(dietbook => {\n      if (dietbook.meal?.length === 0) {\n        return;\n      }\n      if (dietbook.meal) {\n        const mealList = dietbook.meal.map(m => m);\n        this.dietMeals.getAllMeat().pipe(map(meals => meals.filter(meal => mealList.includes(meal.id)))).subscribe(meals => {\n          let mealToRemoved = meals.filter(meal => StageToRemoveSelected.some(stage => meal.stage.includes(stage.value)));\n          mealToRemoved.forEach(element => {\n            let arrStage = element.stage.map(m => m);\n            const stageToRemove = StageToRemoveSelected.map(item => item.value);\n            for (const numToremove of stageToRemove) {\n              const indexToRemove = arrStage.indexOf(numToremove);\n              if (indexToRemove === -1) {\n                arrStage = arrStage.map(item => item >= numToremove ? item - 1 : item);\n              } else if (indexToRemove !== -1) {\n                arrStage.splice(indexToRemove, 1);\n                arrStage = arrStage.map(item => item > numToremove ? item - 1 : item);\n              }\n              if (arrStage.length === 0) {\n                this.dietMeals.deleteMeal(element.id).subscribe();\n              }\n            }\n            const updatedMeal = {\n              ...element,\n              stage: arrStage\n            };\n            this.dietMeals.modifyDietMeal(element.id, updatedMeal).subscribe();\n            console.log(\"arrStage final du dietMeal\", element.id, arrStage);\n            return arrStage;\n          });\n        });\n      }\n    });\n    this.router.navigateByUrl(`dietbook?dietId=${this.dietBookId}`);\n  }\n  static #_ = this.ɵfac = function DietFormComponent_Factory(t) {\n    return new (t || DietFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DietBooksService), i0.ɵɵdirectiveInject(i4.mealService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i5.MatDialog), i0.ɵɵdirectiveInject(i6.MessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DietFormComponent,\n    selectors: [[\"app-diet-form\"]],\n    decls: 46,\n    vars: 9,\n    consts: [[1, \"form-card\"], [4, \"ngIf\"], [3, \"formGroup\"], [1, \"form-group-1\"], [\"for\", \"id\"], [\"id\", \"id\", \"type\", \"number\", \"formControlName\", \"id\"], [1, \"form-group\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [\"for\", \"pathology\"], [\"name\", \"pathology\", \"id\", \"pathology\", \"formControlName\", \"pathology\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"sexe\"], [\"formControlName\", \"sexe\", 1, \"mat-radio-button\"], [\"value\", \"homme\", 3, \"disabled\"], [\"value\", \"femme\"], [\"for\", \"nbStage\"], [\"id\", \"nbStage\", \"type\", \"number\", \"formControlName\", \"nbStage\"], [\"for\", \"nbWeekPerStage\"], [\"id\", \"nbWeekPerStage\", \"type\", \"number\", \"formControlName\", \"nbWeekPerStage\"], [\"for\", \"description\"], [\"id\", \"description\", \"type\", \"text\", \"formControlName\", \"description\", \"rows\", \"4\"], [\"for\", \"online\"], [\"formControlName\", \"online\"], [1, \"action-buttons\"], [\"mat-raised-button\", \"\", 3, \"click\", 4, \"ngIf\"], [3, \"value\"], [\"mat-raised-button\", \"\", 3, \"click\"]],\n    template: function DietFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, DietFormComponent_h2_1_Template, 2, 0, \"h2\", 1);\n        i0.ɵɵtemplate(2, DietFormComponent_h2_2_Template, 2, 0, \"h2\", 1);\n        i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Num\\u00E9ro du livret\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Titre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"Pathologie\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, DietFormComponent_p_15_Template, 2, 0, \"p\", 1);\n        i0.ɵɵelementStart(16, \"select\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function DietFormComponent_Template_select_ngModelChange_16_listener($event) {\n          return ctx.selectedPathology = $event;\n        });\n        i0.ɵɵtemplate(17, DietFormComponent_option_17_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 6)(19, \"label\", 12);\n        i0.ɵɵtext(20, \"Sexe\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-radio-group\", 13)(22, \"mat-radio-button\", 14);\n        i0.ɵɵtext(23, \"Homme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-radio-button\", 15);\n        i0.ɵɵtext(25, \"Femme\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 6)(27, \"label\", 16);\n        i0.ɵɵtext(28, \"Nombre d'\\u00E9tape\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 6)(31, \"label\", 18);\n        i0.ɵɵtext(32, \"Nombre de Semaine par \\u00E9tape\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 6)(35, \"label\", 20);\n        i0.ɵɵtext(36, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"textarea\", 21);\n        i0.ɵɵtext(38, \"      \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(39, \"div\", 6);\n        i0.ɵɵelement(40, \"label\", 22);\n        i0.ɵɵelementStart(41, \"mat-slide-toggle\", 23);\n        i0.ɵɵtext(42, \"En Ligne\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"div\", 24);\n        i0.ɵɵtemplate(44, DietFormComponent_button_44_Template, 2, 0, \"button\", 25);\n        i0.ɵɵtemplate(45, DietFormComponent_button_45_Template, 2, 0, \"button\", 25);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mode === \"new\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mode === \"edit\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.dietBookForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", !ctx.selectedPathology);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedPathology);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.myPathologies);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", ctx.selectedPathology === \"Femme enceinte\" || ctx.selectedPathology === \"M\\u00E9nopause\");\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"ngIf\", ctx.buttonCreate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.buttonCreate);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i8.MatRadioGroup, i8.MatRadioButton, i9.MatSlideToggle],\n    styles: [\".form-card[_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n  width: 90%;\\n  margin: 20px auto;\\n  margin-top: 0;\\n  padding: 10px 30px;\\n  box-shadow: lightgray 4px 4px 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin: 10px auto;\\n  width: 90%;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n.form-group-1[_ngcontent-%COMP%] {\\n  visibility: hidden;\\n}\\n\\ninput[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%], .mat-radio-button[_ngcontent-%COMP%], .mat-slide-toggle[_ngcontent-%COMP%] {\\n  width: 60%;\\n}\\n\\n.mat-radio-button[_ngcontent-%COMP%] {\\n  justify-content: flex-start;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  height: 30px;\\n}\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  display: block;\\n  margin: 20px auto;\\n}\\n\\n.custom-dialog-container[_ngcontent-%COMP%] {\\n  white-space: pre-line;\\n}\\n.custom-dialog-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGl2cmV0cy9kaWV0L2RpZXQtZm9ybS9kaWV0LWZvcm0uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi9TaXRlJTIwV2ViL0JEMiUyMEtvbmVjdC9Gcm9udGVuZC9zcmMvYXBwL2xpdnJldHMvZGlldC9kaWV0LWZvcm0vZGlldC1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQUE7RUFFQSxVQUFBO0VBQ0EsaUJBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQ0FBQTtBQ0FGOztBREdBO0VBQ0UsaUJBQUE7RUFDQSxVQUFBO0VBQ0EsYUFBQTtFQUVBLDhCQUFBO0FDREY7QURFRTtFQUNFLGtCQUFBO0FDQUo7O0FESUE7Ozs7RUFJRSxVQUFBO0FDREY7O0FER0E7RUFDRSwyQkFBQTtBQ0FGOztBREdBO0VBQ0UsWUFBQTtBQ0FGOztBREdBO0VBQ0UsV0FBQTtBQ0FGOztBREdBO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0FDQUY7O0FERUE7RUFDRSxxQkFBQTtBQ0NGO0FEQUU7RUFDRSxXQUFBO0FDRUoiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jYXJkIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcblxuICB3aWR0aDogOTAlO1xuICBtYXJnaW46IDIwcHggYXV0bztcbiAgbWFyZ2luLXRvcDogMDtcbiAgcGFkZGluZzogMTBweCAzMHB4O1xuICBib3gtc2hhZG93OiBsaWdodGdyYXkgNHB4IDRweCAyMHB4O1xufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbjogMTBweCBhdXRvO1xuICB3aWR0aDogOTAlO1xuICBkaXNwbGF5OiBmbGV4O1xuXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgJi0xIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIH1cbn1cblxuaW5wdXQsXG50ZXh0YXJlYSxcbi5tYXQtcmFkaW8tYnV0dG9uLFxuLm1hdC1zbGlkZS10b2dnbGUge1xuICB3aWR0aDogNjAlO1xufVxuLm1hdC1yYWRpby1idXR0b24ge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG59XG5cbmlucHV0IHtcbiAgaGVpZ2h0OiAzMHB4O1xufVxuXG4uYWN0aW9uLWJ1dHRvbnMge1xuICB3aWR0aDogMTAwJTtcbn1cblxuYnV0dG9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMjBweCBhdXRvO1xufVxuLmN1c3RvbS1kaWFsb2ctY29udGFpbmVyIHtcbiAgd2hpdGUtc3BhY2U6IHByZS1saW5lO1xuICAmIGJ1dHRvbiB7XG4gICAgd2lkdGg6IGF1dG87XG4gIH1cbn1cbiIsIi5mb3JtLWNhcmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB3aWR0aDogOTAlO1xuICBtYXJnaW46IDIwcHggYXV0bztcbiAgbWFyZ2luLXRvcDogMDtcbiAgcGFkZGluZzogMTBweCAzMHB4O1xuICBib3gtc2hhZG93OiBsaWdodGdyYXkgNHB4IDRweCAyMHB4O1xufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbjogMTBweCBhdXRvO1xuICB3aWR0aDogOTAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG4uZm9ybS1ncm91cC0xIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG5pbnB1dCxcbnRleHRhcmVhLFxuLm1hdC1yYWRpby1idXR0b24sXG4ubWF0LXNsaWRlLXRvZ2dsZSB7XG4gIHdpZHRoOiA2MCU7XG59XG5cbi5tYXQtcmFkaW8tYnV0dG9uIHtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xufVxuXG5pbnB1dCB7XG4gIGhlaWdodDogMzBweDtcbn1cblxuLmFjdGlvbi1idXR0b25zIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbmJ1dHRvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDIwcHggYXV0bztcbn1cblxuLmN1c3RvbS1kaWFsb2ctY29udGFpbmVyIHtcbiAgd2hpdGUtc3BhY2U6IHByZS1saW5lO1xufVxuLmN1c3RvbS1kaWFsb2ctY29udGFpbmVyIGJ1dHRvbiB7XG4gIHdpZHRoOiBhdXRvO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["ConfirmationDialogComponent","FormControl","Validators","DietBook","catchError","EMPTY","map","switchMap","tap","i0","DietFormComponent","constructor","formBuilder","router","dietBooks","dietMeals","route","dialog","messageService","ngOnInit","myPathologies","id","name","loading","dietBookId","snapshot","queryParams","pipe","params","mode","initEmptyForm","buttonCreate","getDietBookById","dietbook","dietBook","initModifiyForm","error","errorMsg","JSON","stringify","subscribe","dietBookForm","group","title","required","pathology","sexe","nbStage","nbWeekPerStage","description","online","selectedPathology","get","value","openConfirmationDialog","message","stagesToRemove","diffMessage","difference","i","push","selected","dialogRef","open","width","data","panelClass","afterClosed","result","StageToRemoveSelected","filter","stage","onSubmitFormStageChanged","onSubmitForm","newDietBook","controls","addDietBook","showMessage","navigateByUrl","console","showErrorMessage","log","modifyDietBook","newNbStage","sort","a","b","meal","length","mealList","m","getAllMeat","meals","includes","mealToRemoved","some","forEach","element","arrStage","stageToRemove","item","numToremove","indexToRemove","indexOf","splice","deleteMeal","updatedMeal","modifyDietMeal","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/livrets/diet/diet-form/diet-form.component.ts","/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/livrets/diet/diet-form/diet-form.component.html"],"sourcesContent":["import { Component, NgModule, OnInit } from \"@angular/core\";\nimport { ConfirmationDialogComponent } from \"src/app/core/confirmation-dialog/confirmation-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DietBooksService } from \"src/app/services/diet-book.service\";\nimport { mealService } from \"src/app/services/meal.service\";\nimport { DietBook } from \"src/app/models/diet.model\";\nimport { Meal } from \"src/app/models/meal.model\";\nimport { StageToRemove } from \"src/app/models/dialog-data.model\";\nimport { Observable, catchError, EMPTY } from \"rxjs\";\nimport { map, switchMap, tap } from \"rxjs/operators\";\nimport { MatRadioModule } from \"@angular/material/radio\";\nimport { MessageService } from \"src/app/services/snackBar.service\";\n\n@Component({\n  selector: \"app-diet-form\",\n  templateUrl: \"./diet-form.component.html\",\n  styleUrls: [\"./diet-form.component.scss\"],\n})\nexport class DietFormComponent implements OnInit {\n  dietBookForm!: FormGroup;\n  dietMealForm!: FormGroup;\n  errorMsg!: string;\n  mode!: string;\n  dietBookId!: string;\n  loading!: Boolean;\n  dietBook!: DietBook;\n  dietBook$!: Observable<DietBook>;\n  myPathologies!: any[];\n  selectedPathology!: string;\n  messageStage!: Boolean;\n  dialogRef!: any;\n  mealIds!: Array<string>;\n  meals!: Meal[];\n  buttonCreate: boolean = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private dietBooks: DietBooksService,\n    private dietMeals: mealService,\n    private route: ActivatedRoute,\n    private dialog: MatDialog,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit() {\n    this.myPathologies = [\n      { id: 1, name: \"Sans pathologie\" },\n      { id: 2, name: \"Anémie\" },\n      { id: 3, name: \"Athérosclérose/thrombose\" },\n      { id: 4, name: \"Cholestérol\" },\n      { id: 5, name: \"Diabète\" },\n      { id: 6, name: \"Femme enceinte\" },\n      { id: 7, name: \"Hypertension\" },\n      { id: 8, name: \"Hyperthyroïdie\" },\n      { id: 9, name: \"Hypothyroïdie\" },\n      { id: 10, name: \"Lombalgie/lumbago\" },\n      { id: 11, name: \"Maladie de cœliaque\" },\n      { id: 12, name: \"Maladie de crohn\" },\n      { id: 13, name: \"Maladie hépatique/hépatite\" },\n      { id: 14, name: \"Ménopause\" },\n      { id: 15, name: \"Ostéoporose\" },\n      { id: 16, name: \"Perte de poids rapide\" },\n      { id: 17, name: \"Post infarctus\" },\n      { id: 18, name: \"Sarcopénie\" },\n      { id: 19, name: \"Sédentaire\" },\n      { id: 20, name: \"Spondylarthrite\" },\n      { id: 21, name: \"Sportif : activités endurantes\" },\n      { id: 22, name: \"Sportif: activité de force\" },\n      { id: 23, name: \"Triglycérides\" },\n      { id: 24, name: \"Urée\" },\n    ];\n\n    this.loading = true;\n    this.dietBookId = this.route.snapshot.queryParams[\"dietId\"];\n\n    this.route.queryParams\n      .pipe(\n        switchMap((params) => {\n          if (!this.dietBookId) {\n            this.mode = \"new\";\n            this.initEmptyForm();\n            this.buttonCreate = true;\n            this.loading = false;\n            return EMPTY;\n          } else {\n            this.mode = \"edit\";\n            return this.dietBooks.getDietBookById(params[\"dietId\"]);\n          }\n        }),\n        tap((dietbook) => {\n          if (dietbook) {\n            this.dietBook = dietbook;\n\n            this.initModifiyForm(dietbook);\n            this.loading = false;\n          }\n        }),\n        catchError((error) => (this.errorMsg = JSON.stringify(error)))\n      )\n      .subscribe();\n  }\n\n  initEmptyForm() {\n    this.dietBookForm = this.formBuilder.group({\n      title: new FormControl(\"\", Validators.required),\n      pathology: new FormControl(\"\", Validators.required),\n      sexe: new FormControl(\"\"),\n      nbStage: new FormControl(\"4\"),\n      nbWeekPerStage: new FormControl(\"3\"),\n      description: new FormControl(\"\"),\n      id: new FormControl(\"0\"),\n      online: new FormControl(false), // Initialiser à false (hors ligne)\n    });\n  }\n\n  initModifiyForm(dietbook: DietBook) {\n    this.dietBookForm = this.formBuilder.group({\n      id: dietbook.id,\n      title: dietbook.title,\n      pathology: dietbook.pathology,\n      nbStage: dietbook.nbStage,\n      nbWeekPerStage: dietbook.nbWeekPerStage,\n      description: dietbook.description,\n      online: dietbook.online === false ? 0 : dietbook.online,\n      sexe: dietbook.sexe,\n    });\n    this.selectedPathology = this.dietBookForm.get(\"pathology\")!.value;\n  }\n  openConfirmationDialog(): void {\n    let message = \"Êtes-vous sûr de vouloir modifier ce livret ?\";\n    let stagesToRemove: StageToRemove[] = [];\n    let diffMessage = \"\";\n    if (this.dietBook.nbStage > this.dietBookForm.get(\"nbStage\")!.value) {\n      const difference =\n        this.dietBook.nbStage - this.dietBookForm.get(\"nbStage\")!.value;\n      if (difference > 1) {\n        diffMessage =\n          \"Sélectionnez les \" + difference + \" étapes à supprimer\\n\";\n      } else {\n        diffMessage = \"Sélectionnez l'étape à supprimer\\n\";\n      }\n      message =\n        \"Le nombre d'étape a diminué.\\n En validant, les étapes seront supprimées des repas.\\n \" +\n        diffMessage +\n        message;\n\n      // Création d'une instance de StageToRemove pour chaque étape\n      for (let i = 1; i <= this.dietBook.nbStage; i++) {\n        stagesToRemove.push({ value: i, selected: false });\n      }\n    }\n\n    this.dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      width: \"500px\",\n      data: { message: message, stagesToRemove: stagesToRemove },\n      panelClass: \"custom-dialog-container\",\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: StageToRemove[]) => {\n      if (result) {\n        if (this.dietBook.nbStage > this.dietBookForm.get(\"nbStage\")!.value) {\n          const StageToRemoveSelected = stagesToRemove.filter(\n            (stage) => stage.selected === true\n          );\n\n          // Supprimer les étapes des repas\n          this.onSubmitFormStageChanged(\n            result,\n            StageToRemoveSelected,\n            this.dietBook.nbStage\n          );\n          this.onSubmitForm();\n        } else {\n          // Mettre à jour normalement\n          this.onSubmitForm();\n        }\n      }\n    });\n  }\n\n  onSubmitForm() {\n    this.loading = true;\n    const newDietBook = new DietBook();\n    newDietBook.title = this.dietBookForm.get(\"title\")!.value;\n    newDietBook.pathology = this.dietBookForm.get(\"pathology\")!.value;\n    newDietBook.nbStage = this.dietBookForm.get(\"nbStage\")!.value;\n    newDietBook.nbWeekPerStage = this.dietBookForm.get(\"nbWeekPerStage\")!.value;\n    newDietBook.description = this.dietBookForm.get(\"description\")!.value;\n    newDietBook.sexe = this.dietBookForm.controls[\"sexe\"].value;\n    newDietBook.online = this.dietBookForm.get(\"online\")!.value;\n\n    if (this.mode === \"new\") {\n      this.dietBooks\n        .addDietBook(this.dietBookForm.value)\n        .pipe(\n          tap(() => {\n            this.loading = false;\n            this.messageService.showMessage(\n              \"le Livret d'Equilibrage alimentaire a bien été créé\"\n            );\n            this.router.navigateByUrl(`dietbooks`);\n          }),\n          catchError((error) => {\n            console.error(error);\n            this.loading = false;\n            this.messageService.showErrorMessage(\n              \"Une erreur s'est produite lors de la création.\"\n            );\n            this.errorMsg = error.message;\n            return EMPTY;\n          })\n        )\n        .subscribe();\n    } else if (this.mode === \"edit\") {\n      console.log(this.dietBookForm.value);\n      this.dietBooks\n        .modifyDietBook(this.dietBookId, this.dietBookForm.value)\n        .pipe(\n          tap(() => {\n            this.loading = false;\n            this.messageService.showMessage(\n              \"Les Modifications sont bien enregistrées\"\n            );\n            this.router.navigateByUrl(`dietbook?dietId=${this.dietBookId}`);\n          }),\n          catchError((error) => {\n            console.error(error);\n            this.loading = false;\n            this.messageService.showErrorMessage(\n              \"Une erreur s'est produite lors de la modification.\"\n            );\n            this.errorMsg = error.message;\n            return EMPTY;\n          })\n        )\n        .subscribe();\n    }\n  }\n  onSubmitFormStageChanged(\n    result: any,\n    StageToRemoveSelected: any,\n    newNbStage: any\n  ) {\n    StageToRemoveSelected = StageToRemoveSelected.sort(\n      (a: any, b: any) => b.value - a.value\n    );\n    this.dietBooks.getDietBookById(this.dietBookId).subscribe((dietbook) => {\n      if (dietbook.meal?.length === 0) {\n        return;\n      }\n      if (dietbook.meal) {\n        const mealList = dietbook.meal.map((m) => m);\n        this.dietMeals\n          .getAllMeat()\n          .pipe(\n            map((meals) => meals.filter((meal) => mealList.includes(meal.id)))\n          )\n          .subscribe((meals) => {\n            let mealToRemoved = meals.filter((meal) =>\n              StageToRemoveSelected.some((stage: any) =>\n                meal.stage.includes(stage.value)\n              )\n            );\n            mealToRemoved.forEach((element) => {\n              let arrStage: number[] = element.stage.map((m) => m);\n              const stageToRemove = StageToRemoveSelected.map(\n                (item: any) => item.value\n              );\n              for (const numToremove of stageToRemove) {\n                const indexToRemove = arrStage.indexOf(numToremove);\n                if (indexToRemove === -1) {\n                  arrStage = arrStage.map((item) =>\n                    item >= numToremove ? item - 1 : item\n                  );\n                } else if (indexToRemove !== -1) {\n                  arrStage.splice(indexToRemove, 1);\n\n                  arrStage = arrStage.map((item) =>\n                    item > numToremove ? item - 1 : item\n                  );\n                }\n                if (arrStage.length === 0) {\n                  this.dietMeals.deleteMeal(element.id).subscribe();\n                }\n              }\n              const updatedMeal: Meal = {\n                ...element,\n                stage: arrStage,\n              };\n\n              this.dietMeals\n                .modifyDietMeal(element.id, updatedMeal)\n                .subscribe();\n              console.log(\"arrStage final du dietMeal\", element.id, arrStage);\n              return arrStage;\n            });\n          });\n      }\n    });\n    this.router.navigateByUrl(`dietbook?dietId=${this.dietBookId}`);\n  }\n}\n// const remainingStages = element.stage;\n\n// const IndexToChange = remainingStages.indexOf(stageNb);\n\n// if (\n//   stageIndex === -1 &&\n//   IndexToChange < remainingStages.length\n// ) {\n//   for (\n//     let i = IndexToChange;\n//     i < remainingStages.length;\n//     i++\n//   ) {\n//     const valueStage = remainingStages[i];\n//     remainingStages[i] = valueStage - 1;\n//   }\n// }\n// element.stage.splice(stageIndex, 1);\n// // console.log(\"le nouvel élément est :\", element.stage);\n// // const remainingStagesNew = element.stage;\n\n// for (let i = IndexToChange; i < remainingStages.length; i++) {\n//   const valueStage = remainingStages[i];\n//   remainingStages[i] = valueStage - 1;\n// }\n// console.log(\n//   \"Nouveau tableau des stages du dietMeal :\",\n//   remainingStages\n// );\n//                 }\n//               });\n//             });\n//           });\n//       }\n//     });\n//   }\n// }\n\n// StageToRemoveSelected.forEach((stage: any) => {\n//   const { value: stageNb } = stage;\n//   console.log(\"for Each stageNB :\", stageNb);\n//   mealToRemoved.forEach((element) => {\n//     const elementStage = element.stage;\n//     console.log(\n//       \"--------------------\",\n//       \"l'id du DietMeal est = \",\n//       element.id,\n//       \" et son stage est : \",\n//       element.stage\n//     );\n//     const stageIndex = element.stage.indexOf(stageNb);\n//     console.log(\"stageIndex\", stageIndex);\n\n//     if (stageIndex !== -1) {\n//       element.stage.splice(stageIndex, 1);\n//       console.log(\"l'élément est :\", element);\n\n//       const remainingStages = element.stage;\n//       console.log(\"remainingStages Avant modif :\", remainingStages);\n\n//       const maxStageNumber = Math.max(...remainingStages);\n//       // Ajuster la longueur du tableau\n//       const newLength =\n//         elementStage.length - StageToRemoveSelected.length;\n//       remainingStages.length =\n//         newLength < 0 ? maxStageNumber : newLength;\n//       if (stageIndex === 0) {\n//         console.log(\"le meal va être supprimé\");\n//       } else if (stageIndex != -1) {\n//         for (let i = 0; i < remainingStages.length; i++) {\n//           remainingStages[i] = i + 1;\n//         }\n//       } else {\n//         for (\n//           let i = stageIndex - 1;\n//           i < remainingStages.length;\n//           i++\n//         ) {\n//           remainingStages[i] = i + 1;\n//         }\n//       }\n\n//       console.log(\n//         \"Stages restants après renumérotation :\",\n//         remainingStages\n//       );\n//     }\n//   });\n//   console.log(\"les modifs\", mealToRemoved);\n// });\n\n// Mettez à jour votre variable avec les modifications nécessaires ici\n// Par exemple, this.maVariable = remainingStages;\n// });\n// }\n\n// }\n//     this.dietBooks\n//       .addDietBook(this.dietBookForm.value)\n//       .pipe(tap(() => this.router.navigateByUrl(\"dietBooks/add_diet_book\")))\n//       .subscribe;\n//   }\n// }\n\n// textheader!: string;\n\n// dietBookForm!: FormGroup;\n// mode!: string;\n// loading!: boolean;\n// dietBook!: DietBook;\n// errorMsg!: string;\n\n// constructor(\n//   private formBuilder: FormBuilder,\n//   private route: ActivatedRoute,\n//   private router: Router,\n//   private dietBooks: DietBooksService,\n//   private auth: AuthService\n// ) {}\n\n// ngOnInit() {\n//   this.textheader = \"Saisie des Livrets Diet\";\n//   this.loading = true;\n//   this.route.params\n//     .pipe(\n//       switchMap((params) => {\n//         if (!params[\"id\"]) {\n//           this.mode = \"new\";\n//           this.initEmptyForm();\n//           this.loading = false;\n//           return EMPTY;\n//         } else {\n//           this.mode = \"edit\";\n//           return this.dietBooks.getDietBookById(params[\"id\"]);\n//         }\n//       }),\n//       tap((dietBook) => {\n//         if (dietBook) {\n//           this.dietBook = dietBook;\n//           this.initModifiyForm(dietBook);\n//           this.loading = false;\n//         }\n//       }),\n//       catchError((error) => (this.errorMsg = JSON.stringify(error)))\n//     )\n//     .subscribe();\n// }\n\n// initEmptyForm() {\n//   this.dietBookForm = this.formBuilder.group({\n//     name: [null, Validators.required],\n//     pathology: [null, Validators.required],\n//     nbStage: [null, Validators.required],\n//     nbWeekPerStage: [null, Validators.required],\n//     description: [null, Validators.required],\n//     meal: [null]\n//   });\n// }\n\n// initModifiyForm(dietBook: DietBook) {\n//   this.dietBookForm = this.formBuilder.group({\n//     name: [dietBook.name, Validators.required],\n//     pathology: [dietBook.pathology, Validators.required],\n//     nbStage: [dietBook.nbStage, Validators.required],\n//     nbWeekPerStage: [dietBook.nbWeekPerStage, Validators.required],\n//     description: [dietBook.description, Validators.required],\n//   });\n// }\n\n// onSubmit() {\n//   this.loading = true;\n//   const newDietBook = new DietBook();\n//   newDietBook.name = this.dietBookForm.get(\"name\")!.value;\n//   newDietBook.pathology = this.dietBookForm.get(\"pathology\")!.value;\n//   newDietBook.nbStage = this.dietBookForm.get(\"nbStage\")!.value;\n//   newDietBook.nbWeekPerStage = this.dietBookForm.get(\"nbWeekPerStage\")!.value;\n//   newDietBook.description = this.dietBookForm.get(\"description\")!.value;\n//   if (this.mode === \"new\") {\n//     this.dietBooks\n//       .createDietBook(newDietBook)\n//       .pipe(\n//         tap(({ message }) => {\n//           console.log(message);\n//           this.loading = false;\n//           this.router.navigate([\"/dietBooks\"]);\n//         }),\n//         catchError((error) => {\n//           console.error(error);\n//           this.loading = false;\n//           this.errorMsg = error.message;\n//           return EMPTY;\n//         })\n//       )\n//       .subscribe();\n// } else if (this.mode === \"edit\") {\n//   this.dietBooks\n//   .modifyDietBook(\n//     this.dietBook._id,\n//     newDietBook,\n//   )\n//   .pipe(\n//     tap(({ message }) => {\n//       console.log(message);\n//       this.loading = false;\n//       this.router.navigate([\"/dietbooks\"]);\n//     }),\n//     catchError((error) => {\n//       console.error(error);\n//       this.loading = false;\n//       this.errorMsg = error.message;\n//       return EMPTY;\n//     })\n//   )\n//   .subscribe();\n// }\n","<div class=\"form-card\">\n  <h2 *ngIf=\"this.mode === 'new'\">Nouveau Livret</h2>\n  <h2 *ngIf=\"this.mode === 'edit'\">Modification du livret</h2>\n  <form [formGroup]=\"dietBookForm\">\n    <div class=\"form-group-1\">\n      <label for=\"id\">Numéro du livret</label>\n      <input id=\"id\" type=\"number\" formControlName=\"id\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"title\">Titre</label>\n      <input id=\"title\" type=\"text\" formControlName=\"title\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"pathology\">Pathologie</label>\n      <p *ngIf=\"!selectedPathology\">sélectionnez une pathologie</p>\n      <select\n        name=\"pathology\"\n        id=\"pathology\"\n        [(ngModel)]=\"selectedPathology\"\n        formControlName=\"pathology\"\n      >\n        <option\n          *ngFor=\"let pathology of myPathologies\"\n          [value]=\"pathology.name\"\n        >\n          {{ pathology.name }}\n        </option>\n      </select>\n      <!-- <input id=\"pathology\" type=\"text\" formControlName=\"pathology\" /> -->\n    </div>\n    <div class=\"form-group\">\n      <label for=\"sexe\">Sexe</label>\n      <mat-radio-group class=\"mat-radio-button\" formControlName=\"sexe\">\n        <mat-radio-button\n          value=\"homme\"\n          [disabled]=\"\n            selectedPathology === 'Femme enceinte' ||\n            selectedPathology === 'Ménopause'\n          \"\n          >Homme</mat-radio-button\n        >\n        <mat-radio-button value=\"femme\">Femme</mat-radio-button>\n      </mat-radio-group>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"nbStage\">Nombre d'étape</label>\n      <input id=\"nbStage\" type=\"number\" formControlName=\"nbStage\" />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"nbWeekPerStage\">Nombre de Semaine par étape</label>\n      <input\n        id=\"nbWeekPerStage\"\n        type=\"number\"\n        formControlName=\"nbWeekPerStage\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <textarea\n        id=\"description\"\n        type=\"text\"\n        formControlName=\"description\"\n        rows=\"4\"\n      >\n      </textarea>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"online\"></label>\n      <mat-slide-toggle formControlName=\"online\">En Ligne</mat-slide-toggle>\n    </div>\n  </form>\n  <div class=\"action-buttons\">\n    <button\n      *ngIf=\"this.buttonCreate\"\n      mat-raised-button\n      (click)=\"onSubmitForm()\"\n    >\n      Créer\n    </button>\n    <button\n      *ngIf=\"!this.buttonCreate\"\n      mat-raised-button\n      (click)=\"openConfirmationDialog()\"\n    >\n      Valider\n    </button>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}