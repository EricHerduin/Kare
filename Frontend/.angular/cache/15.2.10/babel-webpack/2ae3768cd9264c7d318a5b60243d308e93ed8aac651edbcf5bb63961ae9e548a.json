{"ast":null,"code":"import { Subject, switchMap, map } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class RecipeService {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n    this.recipes$ = new Subject();\n  }\n  getAllRecipes() {\n    return this.http.get(\"http://localhost:5400/api/recipes\");\n  }\n  getRecipeById(recipeId) {\n    return this.http.get(`http://localhost:5400/api/recipes/${recipeId}`);\n  }\n  addRecipe(formValue) {\n    return this.getAllRecipes().pipe(map(recipes => ({\n      ...formValue\n    })), switchMap(newRecipe => this.http.post(\"http://localhost:5400/api/recipes/add_recipe\", newRecipe)));\n  }\n  static #_ = this.ɵfac = function RecipeService_Factory(t) {\n    return new (t || RecipeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RecipeService,\n    factory: RecipeService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":"AAIA,SAAqBA,OAAO,EAAEC,SAAS,EAAEC,GAAG,QAAQ,MAAM;;;;AAK1D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB,EAAUC,IAAiB;IAA3C,SAAI,GAAJD,IAAI;IAAsB,SAAI,GAAJC,IAAI;IAFlD,aAAQ,GAAG,IAAIN,OAAO,EAAY;EAEgC;EAElEO,aAAa;IACX,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,mCAAmC,CAAC;EACrE;EAEAC,aAAa,CAACC,QAAgB;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAClB,qCAAqCE,QAAQ,EAAE,CAChD;EACH;EAEAC,SAAS,CAACC,SAOT;IACC,OAAO,IAAI,CAACL,aAAa,EAAE,CAACM,IAAI,CAC9BX,GAAG,CAAEY,OAAO,KAAM;MAChB,GAAGF;KACJ,CAAC,CAAC,EACHX,SAAS,CAAEc,SAAS,IAClB,IAAI,CAACV,IAAI,CAACW,IAAI,CACZ,8CAA8C,EAC9CD,SAAS,CACV,CACF,CACF;EACH;EAAC;qBAlCUZ,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAc,SAAbd,aAAa;IAAAe,YAFZ;EAAM","names":["Subject","switchMap","map","RecipeService","constructor","http","auth","getAllRecipes","get","getRecipeById","recipeId","addRecipe","formValue","pipe","recipes","newRecipe","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/services/recipe.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Recipe } from \"../models/recipe.model\";\nimport { AuthService } from \"./auth.service\";\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { Observable, Subject, switchMap, map } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class RecipeService {\n  recipes$ = new Subject<Recipe[]>();\n\n  constructor(private http: HttpClient, private auth: AuthService) {}\n\n  getAllRecipes(): Observable<Recipe[]> {\n    return this.http.get<Recipe[]>(\"http://localhost:5400/api/recipes\");\n  }\n\n  getRecipeById(recipeId: number): Observable<Recipe> {\n    return this.http.get<Recipe>(\n      `http://localhost:5400/api/recipes/${recipeId}`\n    );\n  }\n\n  addRecipe(formValue: {\n    id: string;\n    title: string;\n    livret: [string];\n    ingredient: [string];\n    recipe: [string];\n    customerId: [string];\n  }): Observable<Recipe> {\n    return this.getAllRecipes().pipe(\n      map((recipes) => ({\n        ...formValue,\n      })),\n      switchMap((newRecipe) =>\n        this.http.post<Recipe>(\n          \"http://localhost:5400/api/recipes/add_recipe\",\n          newRecipe\n        )\n      )\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}