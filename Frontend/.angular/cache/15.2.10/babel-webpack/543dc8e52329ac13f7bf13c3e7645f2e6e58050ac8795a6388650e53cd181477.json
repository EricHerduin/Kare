{"ast":null,"code":"import { catchError, map, switchMap } from \"rxjs/operators\";\nimport { Subject, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class mealService {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n    this.meal$ = new Subject();\n  }\n  getAllMeat() {\n    return this.http.get(\"http://localhost:5400/api/dietbooks/meals/all_meals\");\n  }\n  getMealById(mealId) {\n    return this.http.get(`http://localhost:5400/api/dietbooks/meal/${mealId}`);\n  }\n  deleteMeal(mealId) {\n    return this.http.delete(`http://localhost:5400/api/dietbooks/meal/${mealId}`);\n  }\n  modifyDietMeal(id, dietMeal) {\n    return this.http.put(`http://localhost:5400/api/dietbooks/modify_meal/${id}`, dietMeal).pipe(catchError(error => throwError(error.error.message)));\n  }\n  addMeal(formValue) {\n    return this.getAllMeat().pipe(map(meal => ({\n      ...formValue\n    })), switchMap(newmeal => this.http.post(\"http://localhost:5400/api/dietbooks/meal/add_meal\", newmeal)));\n  }\n  static #_ = this.ɵfac = function mealService_Factory(t) {\n    return new (t || mealService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: mealService,\n    factory: mealService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":"AAIA,SAASA,UAAU,EAAEC,GAAG,EAAEC,SAAS,QAAa,gBAAgB;AAEhE,SAAqBC,OAAO,EAAEC,UAAU,QAAQ,MAAM;;;;AAKtD,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB,EAAUC,IAAiB;IAA3C,SAAI,GAAJD,IAAI;IAAsB,SAAI,GAAJC,IAAI;IAFlD,UAAK,GAAG,IAAIL,OAAO,EAAQ;EAEuC;EAElEM,UAAU;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAClB,qDAAqD,CACtD;EACH;EACAC,WAAW,CAACC,MAAc;IACxB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAClB,4CAA4CE,MAAM,EAAE,CACrD;EACH;EACAC,UAAU,CAACD,MAAc;IACvB,OAAO,IAAI,CAACL,IAAI,CAACO,MAAM,CACrB,4CAA4CF,MAAM,EAAE,CACrD;EACH;EACAG,cAAc,CAACC,EAAU,EAAEC,QAAc;IACvC,OAAO,IAAI,CAACV,IAAI,CACbW,GAAG,CACF,mDAAmDF,EAAE,EAAE,EACvDC,QAAQ,CACT,CACAE,IAAI,CAACnB,UAAU,CAAEoB,KAAK,IAAKhB,UAAU,CAACgB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;EACjE;EAEAC,OAAO,CAACC,SAeP;IACC,OAAO,IAAI,CAACd,UAAU,EAAE,CAACU,IAAI,CAC3BlB,GAAG,CAAEuB,IAAI,KAAM;MACb,GAAGD;KACJ,CAAC,CAAC,EACHrB,SAAS,CAAEuB,OAAO,IAChB,IAAI,CAAClB,IAAI,CAACmB,IAAI,CACZ,mDAAmD,EACnDD,OAAO,CACR,CACF,CACF;EACH;EAAC;qBAxDUpB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAsB,SAAXtB,WAAW;IAAAuB,YAFV;EAAM","names":["catchError","map","switchMap","Subject","throwError","mealService","constructor","http","auth","getAllMeat","get","getMealById","mealId","deleteMeal","delete","modifyDietMeal","id","dietMeal","put","pipe","error","message","addMeal","formValue","meal","newmeal","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/services/meal.service.ts"],"sourcesContent":["import { Meal } from \"../models/meal.model\";\n\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { AuthService } from \"./auth.service\";\nimport { catchError, map, switchMap, tap } from \"rxjs/operators\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, Subject, throwError } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class mealService {\n  meal$ = new Subject<Meal>();\n\n  constructor(private http: HttpClient, private auth: AuthService) {}\n\n  getAllMeat(): Observable<Meal[]> {\n    return this.http.get<Meal[]>(\n      \"http://localhost:5400/api/dietbooks/meals/all_meals\"\n    );\n  }\n  getMealById(mealId: string): Observable<Meal> {\n    return this.http.get<Meal>(\n      `http://localhost:5400/api/dietbooks/meal/${mealId}`\n    );\n  }\n  deleteMeal(mealId: string): Observable<Meal> {\n    return this.http.delete<Meal>(\n      `http://localhost:5400/api/dietbooks/meal/${mealId}`\n    );\n  }\n  modifyDietMeal(id: string, dietMeal: Meal) {\n    return this.http\n      .put<{ message: string }>(\n        `http://localhost:5400/api/dietbooks/modify_meal/${id}`,\n        dietMeal\n      )\n      .pipe(catchError((error) => throwError(error.error.message)));\n  }\n\n  addMeal(formValue: {\n    typeMeal: string;\n    collation: string;\n    collationList: string[];\n    stage: string[];\n    meat: string;\n    meatQuantity: string;\n    meatList: string;\n    sauce: number;\n    sideDish: string;\n    sideDishQuantity: string;\n    sideDishList: string;\n    drink: string;\n    obs: string;\n    dietBookId: string;\n  }): Observable<Meal> {\n    return this.getAllMeat().pipe(\n      map((meal) => ({\n        ...formValue,\n      })),\n      switchMap((newmeal) =>\n        this.http.post<Meal>(\n          \"http://localhost:5400/api/dietbooks/meal/add_meal\",\n          newmeal\n        )\n      )\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}