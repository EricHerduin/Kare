{"ast":null,"code":"import { FormControl, Validators } from \"@angular/forms\";\nimport { EMPTY, catchError } from \"rxjs\";\nimport { tap, switchMap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/recipe.service\";\nimport * as i4 from \"src/app/services/diet-book.service\";\nimport * as i5 from \"src/app/services/shared.service\";\nimport * as i6 from \"@angular/common\";\nfunction RecipeFormComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"label\", 6);\n    i0.ɵɵtext(6, \"Titre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(8, \"div\", 4)(9, \"div\", 4)(10, \"div\", 4)(11, \"div\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"div\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.recipeForm);\n  }\n}\nexport class RecipeFormComponent {\n  constructor(formBuilder, router, Recipes, route, dietBooks, sharedService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.Recipes = Recipes;\n    this.route = route;\n    this.dietBooks = dietBooks;\n    this.sharedService = sharedService;\n  }\n  ngOnInit() {\n    this.loading = true;\n    this.recipeId = this.route.snapshot.queryParams[\"recipeId\"];\n    this.route.queryParams.pipe(switchMap(params => {\n      if (!this.recipeId) {\n        this.mode = \"new\";\n        this.loading = false;\n        this.initEmptyForm();\n        this.sharedService.setTextHeader(`Nouvelle Recette`);\n        return EMPTY;\n      } else {\n        this.mode = \"edit\";\n        this.sharedService.setTextHeader(`Recette N° ${this.recipeId}`);\n        return this.Recipes.getRecipeById(params[\"recipeId\"]);\n      }\n    }), tap(recipe => {\n      if (recipe) {\n        this.recipeBook = recipe;\n        console.log(this.recipeBook);\n        this.loading = false;\n        this.initModifyForm(this.recipeBook);\n      }\n    }), catchError(error => this.errorMsg = JSON.stringify(error))).subscribe();\n  }\n  initEmptyForm() {\n    this.recipeForm = this.formBuilder.group({\n      title: new FormControl([\"\", Validators.required])\n    });\n  }\n  initModifyForm(recipebook) {\n    this.recipeForm = this.formBuilder.group({\n      id: recipebook.id,\n      title: recipebook.title\n    });\n    console.log(this.recipeForm);\n  }\n  static #_ = this.ɵfac = function RecipeFormComponent_Factory(t) {\n    return new (t || RecipeFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RecipeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i4.DietBooksService), i0.ɵɵdirectiveInject(i5.SharedService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeFormComponent,\n    selectors: [[\"app-recipe-form\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"row_entire\"], [1, \"border\", \"col\"], [1, \"border\", \"col3\"], [1, \"form-group\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [1, \"border\", \"col1\"]],\n    template: function RecipeFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, RecipeFormComponent_form_0_Template, 13, 1, \"form\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.recipeForm);\n      }\n    },\n    dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".border[_ngcontent-%COMP%] {\\n  border: 1px solid black;\\n}\\n\\n.col[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-flow: column;\\n  width: 75%;\\n  align-items: center;\\n}\\n.col3[_ngcontent-%COMP%] {\\n  width: 80%;\\n  height: 75px;\\n  justify-content: center;\\n}\\n.col1[_ngcontent-%COMP%] {\\n  width: 25%;\\n  height: auto;\\n}\\n\\n.row_entire[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-flow: row;\\n  width: 90%;\\n  margin: 0 auto;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  margin-right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGl2cmV0cy9yZWNpcGUvcmVjaXBlLWZvcm0vcmVjaXBlLWZvcm0uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi9TaXRlJTIwV2ViL0JEMiUyMEtvbmVjdC9Gcm9udGVuZC9zcmMvYXBwL2xpdnJldHMvcmVjaXBlL3JlY2lwZS1mb3JtL3JlY2lwZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQUE7QUNDRjs7QURDQTtFQUNFLGFBQUE7RUFDQSxpQkFBQTtFQUNBLFVBQUE7RUFDQSxtQkFBQTtBQ0VGO0FEQUU7RUFDRSxVQUFBO0VBQ0EsWUFBQTtFQUNBLHVCQUFBO0FDRUo7QURBRTtFQUNFLFVBQUE7RUFDQSxZQUFBO0FDRUo7O0FERUU7RUFDRSxhQUFBO0VBQ0EsY0FBQTtFQUNBLFVBQUE7RUFDQSxjQUFBO0FDQ0o7O0FERUE7RUFDRSxrQkFBQTtBQ0NGIiwic291cmNlc0NvbnRlbnQiOlsiLmJvcmRlciB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xufVxuLmNvbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uO1xuICB3aWR0aDogNzUlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gICYzIHtcbiAgICB3aWR0aDogODAlO1xuICAgIGhlaWdodDogNzVweDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuICAmMSB7XG4gICAgd2lkdGg6IDI1JTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gIH1cbn1cbi5yb3cge1xuICAmX2VudGlyZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdztcbiAgICB3aWR0aDogOTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5sYWJlbCB7XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbn1cbiIsIi5ib3JkZXIge1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbn1cblxuLmNvbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uO1xuICB3aWR0aDogNzUlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmNvbDMge1xuICB3aWR0aDogODAlO1xuICBoZWlnaHQ6IDc1cHg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLmNvbDEge1xuICB3aWR0aDogMjUlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi5yb3dfZW50aXJlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3c7XG4gIHdpZHRoOiA5MCU7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG5sYWJlbCB7XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAGEA,WAAW,EACXC,UAAU,QACL,gBAAgB;AAEvB,SAAqBC,KAAK,EAAEC,UAAU,QAAQ,MAAM;AACpD,SAASC,GAAG,EAAOC,SAAS,QAAQ,gBAAgB;;;;;;;;;;ICTpDC,+BAAkD;IAKrBA,qBAAK;IAAAA,iBAAQ;IAChCA,2BAAwD;IAC1DA,iBAAM;IAERA,yBAA+B;IAIjCA,iBAAM;IACNA,0BAA+B;IACjCA,iBAAM;;;;IAfiBA,6CAAwB;;;ADoBjD,OAAM,MAAOC,mBAAmB;EAS9BC,YACUC,WAAwB,EACxBC,MAAc,EACdC,OAAsB,EACtBC,KAAqB,EACrBC,SAA2B,EAC3BC,aAA4B;IAL5B,gBAAW,GAAXL,WAAW;IACX,WAAM,GAANC,MAAM;IACN,YAAO,GAAPC,OAAO;IACP,UAAK,GAALC,KAAK;IACL,cAAS,GAATC,SAAS;IACT,kBAAa,GAAbC,aAAa;EACpB;EAEHC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,WAAW,CAAC,UAAU,CAAC;IAE3D,IAAI,CAACP,KAAK,CAACO,WAAW,CACnBC,IAAI,CACHf,SAAS,CAAEgB,MAAM,IAAI;MACnB,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;QAClB,IAAI,CAACK,IAAI,GAAG,KAAK;QACjB,IAAI,CAACN,OAAO,GAAG,KAAK;QACpB,IAAI,CAACO,aAAa,EAAE;QACpB,IAAI,CAACT,aAAa,CAACU,aAAa,CAAC,kBAAkB,CAAC;QACpD,OAAOtB,KAAK;OACb,MAAM;QACL,IAAI,CAACoB,IAAI,GAAG,MAAM;QAClB,IAAI,CAACR,aAAa,CAACU,aAAa,CAAC,cAAc,IAAI,CAACP,QAAQ,EAAE,CAAC;QAC/D,OAAO,IAAI,CAACN,OAAO,CAACc,aAAa,CAACJ,MAAM,CAAC,UAAU,CAAC,CAAC;;IAEzD,CAAC,CAAC,EACFjB,GAAG,CAAEsB,MAAM,IAAI;MACb,IAAIA,MAAM,EAAE;QACV,IAAI,CAACC,UAAU,GAAGD,MAAM;QACxBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,UAAU,CAAC;QAC5B,IAAI,CAACX,OAAO,GAAG,KAAK;QACpB,IAAI,CAACc,cAAc,CAAC,IAAI,CAACH,UAAU,CAAC;;IAExC,CAAC,CAAC,EACFxB,UAAU,CAAE4B,KAAK,IAAM,IAAI,CAACC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAE,CAAC,CAC/D,CACAI,SAAS,EAAE;EAChB;EAEAZ,aAAa;IACX,IAAI,CAACa,UAAU,GAAG,IAAI,CAAC3B,WAAW,CAAC4B,KAAK,CAAC;MACvCC,KAAK,EAAE,IAAItC,WAAW,CAAC,CAAC,EAAE,EAAEC,UAAU,CAACsC,QAAQ,CAAC;KACjD,CAAC;EACJ;EAEAT,cAAc,CAACU,UAAkB;IAC/B,IAAI,CAACJ,UAAU,GAAG,IAAI,CAAC3B,WAAW,CAAC4B,KAAK,CAAC;MACvCI,EAAE,EAAED,UAAU,CAACC,EAAE;MACjBH,KAAK,EAAEE,UAAU,CAACF;KACnB,CAAC;IACFV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACO,UAAU,CAAC;EAC9B;EAAC;qBA9DU7B,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAmC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCpBhCxC,uEAgBO;;;QAhBAA,qCAAgB","names":["FormControl","Validators","EMPTY","catchError","tap","switchMap","i0","RecipeFormComponent","constructor","formBuilder","router","Recipes","route","dietBooks","sharedService","ngOnInit","loading","recipeId","snapshot","queryParams","pipe","params","mode","initEmptyForm","setTextHeader","getRecipeById","recipe","recipeBook","console","log","initModifyForm","error","errorMsg","JSON","stringify","subscribe","recipeForm","group","title","required","recipebook","id","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/livrets/recipe/recipe-form/recipe-form.component.ts","/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/livrets/recipe/recipe-form/recipe-form.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, EMPTY, catchError } from \"rxjs\";\nimport { tap, map, switchMap } from \"rxjs/operators\";\nimport { Recipe } from \"src/app/models/recipe.model\";\nimport { DietBooksService } from \"src/app/services/diet-book.service\";\nimport { RecipeService } from \"src/app/services/recipe.service\";\nimport { SharedService } from \"src/app/services/shared.service\";\n\n@Component({\n  selector: \"app-recipe-form\",\n  templateUrl: \"./recipe-form.component.html\",\n  styleUrls: [\"./recipe-form.component.scss\"],\n})\nexport class RecipeFormComponent implements OnInit {\n  recipeForm!: FormGroup;\n  errorMsg!: string;\n  mode!: string;\n  recipeId!: number;\n  loading!: boolean;\n  recipeBook!: Recipe;\n  recipeBook$!: Observable<Recipe>;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private Recipes: RecipeService,\n    private route: ActivatedRoute,\n    private dietBooks: DietBooksService,\n    private sharedService: SharedService\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.recipeId = this.route.snapshot.queryParams[\"recipeId\"];\n\n    this.route.queryParams\n      .pipe(\n        switchMap((params) => {\n          if (!this.recipeId) {\n            this.mode = \"new\";\n            this.loading = false;\n            this.initEmptyForm();\n            this.sharedService.setTextHeader(`Nouvelle Recette`);\n            return EMPTY;\n          } else {\n            this.mode = \"edit\";\n            this.sharedService.setTextHeader(`Recette N° ${this.recipeId}`);\n            return this.Recipes.getRecipeById(params[\"recipeId\"]);\n          }\n        }),\n        tap((recipe) => {\n          if (recipe) {\n            this.recipeBook = recipe;\n            console.log(this.recipeBook);\n            this.loading = false;\n            this.initModifyForm(this.recipeBook);\n          }\n        }),\n        catchError((error) => (this.errorMsg = JSON.stringify(error)))\n      )\n      .subscribe();\n  }\n\n  initEmptyForm() {\n    this.recipeForm = this.formBuilder.group({\n      title: new FormControl([\"\", Validators.required]),\n    });\n  }\n\n  initModifyForm(recipebook: Recipe) {\n    this.recipeForm = this.formBuilder.group({\n      id: recipebook.id,\n      title: recipebook.title,\n    });\n    console.log(this.recipeForm);\n  }\n}\n","<form *ngIf=\"recipeForm\" [formGroup]=\"recipeForm\">\n  <div class=\"row_entire\">\n    <div class=\"border col\">\n      <div class=\"border col3\">\n        <div class=\"form-group\">\n          <label for=\"title\">Titre</label>\n          <input id=\"title\" type=\"text\" formControlName=\"title\" />\n        </div>\n      </div>\n      <div class=\"border col3\"></div>\n      <div class=\"border col3\"></div>\n      <div class=\"border col3\"></div>\n      <div class=\"border col3\"></div>\n    </div>\n    <div class=\"border col1\"></div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}