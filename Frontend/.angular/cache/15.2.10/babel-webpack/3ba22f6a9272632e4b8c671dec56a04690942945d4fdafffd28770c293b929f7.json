{"ast":null,"code":"import { FormControl, Validators } from \"@angular/forms\";\nimport { EMPTY, catchError } from \"rxjs\";\nimport { tap, switchMap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/recipe.service\";\nimport * as i4 from \"src/app/services/diet-book.service\";\nimport * as i5 from \"src/app/services/shared.service\";\nimport * as i6 from \"src/app/services/snackBar.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../../directive/autofocus.directive\";\nfunction RecipeFormComponent_form_2_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 14)(2, \"label\", 15);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 16);\n    i0.ɵɵelementStart(5, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function RecipeFormComponent_form_2_div_12_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.removeIngredient(i_r3));\n    });\n    i0.ɵɵtext(6, \"-\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r3 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"ingredient\", i_r3, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Ingredient \", i_r3 + 1, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", i_r3);\n  }\n}\nfunction RecipeFormComponent_form_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4)(4, \"div\", 5)(5, \"label\", 6);\n    i0.ɵɵtext(6, \"Titre\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 8)(10, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function RecipeFormComponent_form_2_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.addIngredient());\n    });\n    i0.ɵɵtext(11, \" Ajouter un ingr\\u00E9dient \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, RecipeFormComponent_form_2_div_12_Template, 7, 3, \"div\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(13, \"div\", 4)(14, \"div\", 4)(15, \"div\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 12)(18, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function RecipeFormComponent_form_2_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onSubmitForm());\n    });\n    i0.ɵɵtext(19, \"Enregistrer\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.recipeForm);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.ingredientListControls);\n  }\n}\nexport class RecipeFormComponent {\n  constructor(formBuilder, router, recipeService, route, dietBooks, sharedService, messageService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.recipeService = recipeService;\n    this.route = route;\n    this.dietBooks = dietBooks;\n    this.sharedService = sharedService;\n    this.messageService = messageService;\n    this.ingredientListControls = [];\n    this.recipeListControls = [];\n    this.dietbookListControls = [];\n  }\n  ngOnInit() {\n    this.loading = true;\n    this.recipeId = this.route.snapshot.queryParams[\"recipeId\"];\n    this.route.queryParams.pipe(switchMap(params => {\n      if (!this.recipeId) {\n        this.mode = \"new\";\n        this.loading = false;\n        this.initEmptyForm();\n        this.sharedService.setTextHeader(`Nouvelle Recette`);\n        return EMPTY;\n      } else {\n        this.mode = \"edit\";\n        this.sharedService.setTextHeader(`Recette N° ${this.recipeId}`);\n        return this.recipeService.getRecipeById(params[\"recipeId\"]);\n      }\n    }), tap(recipe => {\n      if (recipe) {\n        this.recipeBook = recipe;\n        console.log(this.recipeBook);\n        this.loading = false;\n        this.initModifyForm(this.recipeBook);\n      }\n    }), catchError(error => this.errorMsg = JSON.stringify(error))).subscribe();\n  }\n  initEmptyForm() {\n    this.recipeForm = this.formBuilder.group({\n      title: new FormControl(\"\", Validators.required),\n      dietBookIds: this.formBuilder.array([]),\n      ingredients: this.formBuilder.array([]),\n      recipe: this.formBuilder.array([]),\n      preparationTime: new FormControl(null),\n      cookingTime: new FormControl(null),\n      breakTime: new FormControl(null),\n      online: new FormControl(false),\n      id: new FormControl(0)\n    });\n  }\n  addIngredient() {\n    const newIngredientControl = this.formBuilder.control(\"\");\n    this.ingredientListControls.push(newIngredientControl);\n    this.recipeForm.get(\"ingredients\").push(newIngredientControl);\n  }\n  removeIngredient(index) {\n    this.ingredientListControls.splice(index, 1);\n    this.recipeForm.get(\"ingredients\").removeAt(index);\n  }\n  addRecipe() {\n    const newRecipeControl = this.formBuilder.control(\"\");\n    this.recipeListControls.push(newRecipeControl);\n    this.recipeForm.get(\"recipe\").push(newRecipeControl);\n  }\n  removeRecipe(index) {\n    this.recipeListControls.splice(index, 1);\n    this.recipeForm.get(\"recipe\").removeAt(index);\n  }\n  addDietbook() {\n    const newDietbookControl = this.formBuilder.control(\"\");\n    this.dietbookListControls.push(newDietbookControl);\n    this.recipeForm.get(\"dietbookIds\").push(newDietbookControl);\n  }\n  removeDietbook(index) {\n    this.dietbookListControls.splice(index, 1);\n    this.recipeForm.get(\"dietbookIds\").removeAt(index);\n  }\n  initModifyForm(recipebook) {\n    this.recipeForm = this.formBuilder.group({\n      id: recipebook.id,\n      title: recipebook.title,\n      dietbookIds: this.formBuilder.array(recipebook.dietbookIds),\n      ingredients: this.formBuilder.array(recipebook.ingredients),\n      recipe: this.formBuilder.array(recipebook.recipe),\n      preparationTime: recipebook.preparationTime ?? 0,\n      cookingTime: recipebook.cookingTime ?? 0,\n      breakTime: recipebook.breakTime ?? 0,\n      pics: recipebook.pics ?? [],\n      online: !!recipebook.online ?? false,\n      customerId: recipebook.customerId ?? []\n    });\n    console.log(\"Recipe Form after Initialization: \", this.recipeForm.value);\n  }\n  onSubmitForm() {\n    this.loading = true;\n    // if (this.recipeForm.value.stage !== this.selectedStages) {\n    //   this.dietMealForm.patchValue({ stage: [] });\n    // }\n    // this.dietMealForm.patchValue({\n    //   stage: this.selectedStages.sort((a, b) => a - b),\n    // });\n    // if (this.dietMealForm.value.typeMeal !== \"Collation\") {\n    //   this.dietMealForm.patchValue({ collation: \"\" });\n    // }\n    const ingredientsListValues = this.ingredientListControls.map(control => control.value);\n    const recipesListValues = this.recipeListControls.map(control => control.value);\n    const dietbooksListValues = this.dietbookListControls.map(control => control.value);\n    const newRecipe = {\n      id: this.recipeForm.get(\"id\").value,\n      title: this.recipeForm.get(\"title\").value,\n      dietbookIds: dietbooksListValues,\n      ingredients: ingredientsListValues,\n      recipe: recipesListValues,\n      preparationTime: this.recipeForm.get(\"preparationTime\").value,\n      cookingTime: this.recipeForm.get(\"cookingTime\").value,\n      breakTime: this.recipeForm.get(\"breakTime\").value,\n      pics: this.recipeForm.get(\"pics\").value,\n      online: this.recipeForm.get(\"online\").value,\n      customerId: this.recipeForm.get(\"customerId\").value\n    };\n    if (this.mode === \"new\") {\n      this.recipeService.addRecipe(newRecipe).pipe(tap(() => {\n        this.loading = false;\n        this.messageService.showMessage(\"Le repas a bien été créé\");\n        this.router.navigateByUrl(`recipebooks`);\n      }), catchError(error => {\n        console.error(error);\n        this.loading = false;\n        this.messageService.showErrorMessage(\"Une erreur est survenue lors de la création\");\n        this.errorMsg = error.message;\n        return EMPTY;\n      })).subscribe();\n    } else if (this.mode === \"edit\") {\n      this.recipeService.modifyRecipe(this.recipeId, newRecipe).pipe(tap(() => {\n        this.loading = false;\n        this.messageService.showMessage(\"Le repas a bien été modifié\");\n        this.router.navigateByUrl(`recipebooks`);\n      }), catchError(error => {\n        console.error(error);\n        this.loading = false;\n        this.messageService.showErrorMessage(\"Une erreur est survenue lors de la modification\");\n        this.errorMsg = error.message;\n        return EMPTY;\n      })).subscribe();\n    }\n  }\n  static #_ = this.ɵfac = function RecipeFormComponent_Factory(t) {\n    return new (t || RecipeFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RecipeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i4.DietBooksService), i0.ɵɵdirectiveInject(i5.SharedService), i0.ɵɵdirectiveInject(i6.MessageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeFormComponent,\n    selectors: [[\"app-recipe-form\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [1, \"row_entire\"], [1, \"border\", \"col\"], [1, \"border\", \"col3\"], [1, \"form-group\"], [\"for\", \"title\"], [\"id\", \"title\", \"type\", \"text\", \"formControlName\", \"title\"], [\"formArrayName\", \"ingredients\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [1, \"border\", \"col1\"], [1, \"action-buttons\"], [\"type\", \"submit\", 3, \"click\"], [1, \"form-group\", \"ingredients\"], [3, \"for\"], [\"autofocus\", \"\", \"type\", \"text\", \"appAutofocus\", \"\", 1, \"ingredientInput\", 3, \"formControlName\"]],\n    template: function RecipeFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h6\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, RecipeFormComponent_form_2_Template, 20, 2, \"form\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.mode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.recipeForm);\n      }\n    },\n    dependencies: [i7.NgForOf, i7.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName, i8.AutofocusDirective],\n    styles: [\".border[_ngcontent-%COMP%] {\\n  border: 1px solid black;\\n}\\n\\n.col[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-flow: column;\\n  width: 75%;\\n  align-items: center;\\n}\\n.col3[_ngcontent-%COMP%] {\\n  width: 80%;\\n  height: auto;\\n  min-height: 75px;\\n  justify-content: center;\\n}\\n.col1[_ngcontent-%COMP%] {\\n  width: 25%;\\n  height: auto;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  width: auto;\\n}\\n\\n.row_entire[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-flow: row;\\n  width: 90%;\\n  margin: 0 auto;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  margin-right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbGl2cmV0cy9yZWNpcGUvcmVjaXBlLWZvcm0vcmVjaXBlLWZvcm0uY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi9TaXRlJTIwV2ViL0JEMiUyMEtvbmVjdC9Gcm9udGVuZC9zcmMvYXBwL2xpdnJldHMvcmVjaXBlL3JlY2lwZS1mb3JtL3JlY2lwZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQUE7QUNDRjs7QURDQTtFQUNFLGFBQUE7RUFDQSxpQkFBQTtFQUNBLFVBQUE7RUFDQSxtQkFBQTtBQ0VGO0FEQUU7RUFDRSxVQUFBO0VBQ0EsWUFBQTtFQUNBLGdCQUFBO0VBQ0EsdUJBQUE7QUNFSjtBREFFO0VBQ0UsVUFBQTtFQUNBLFlBQUE7QUNFSjs7QURDQTtFQUNFLFdBQUE7QUNFRjs7QURDRTtFQUNFLGFBQUE7RUFDQSxjQUFBO0VBQ0EsVUFBQTtFQUNBLGNBQUE7QUNFSjs7QURDQTtFQUNFLGtCQUFBO0FDRUYiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9yZGVyIHtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG59XG4uY29sIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW47XG4gIHdpZHRoOiA3NSU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgJjMge1xuICAgIHdpZHRoOiA4MCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIG1pbi1oZWlnaHQ6IDc1cHg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH1cbiAgJjEge1xuICAgIHdpZHRoOiAyNSU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG59XG5idXR0b24ge1xuICB3aWR0aDogYXV0bztcbn1cbi5yb3cge1xuICAmX2VudGlyZSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdztcbiAgICB3aWR0aDogOTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5sYWJlbCB7XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbn1cbiIsIi5ib3JkZXIge1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbn1cblxuLmNvbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uO1xuICB3aWR0aDogNzUlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLmNvbDMge1xuICB3aWR0aDogODAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1pbi1oZWlnaHQ6IDc1cHg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLmNvbDEge1xuICB3aWR0aDogMjUlO1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbmJ1dHRvbiB7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4ucm93X2VudGlyZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93O1xuICB3aWR0aDogOTAlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxubGFiZWwge1xuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["FormControl","Validators","EMPTY","catchError","tap","switchMap","i0","RecipeFormComponent","constructor","formBuilder","router","recipeService","route","dietBooks","sharedService","messageService","ngOnInit","loading","recipeId","snapshot","queryParams","pipe","params","mode","initEmptyForm","setTextHeader","getRecipeById","recipe","recipeBook","console","log","initModifyForm","error","errorMsg","JSON","stringify","subscribe","recipeForm","group","title","required","dietBookIds","array","ingredients","preparationTime","cookingTime","breakTime","online","id","addIngredient","newIngredientControl","control","ingredientListControls","push","get","removeIngredient","index","splice","removeAt","addRecipe","newRecipeControl","recipeListControls","removeRecipe","addDietbook","newDietbookControl","dietbookListControls","removeDietbook","recipebook","dietbookIds","pics","customerId","value","onSubmitForm","ingredientsListValues","map","recipesListValues","dietbooksListValues","newRecipe","showMessage","navigateByUrl","showErrorMessage","message","modifyRecipe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/livrets/recipe/recipe-form/recipe-form.component.ts","/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/livrets/recipe/recipe-form/recipe-form.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators,\n  FormArray,\n} from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, EMPTY, catchError } from \"rxjs\";\nimport { tap, map, switchMap } from \"rxjs/operators\";\nimport { Recipe } from \"src/app/models/recipe.model\";\nimport { DietBooksService } from \"src/app/services/diet-book.service\";\nimport { RecipeService } from \"src/app/services/recipe.service\";\nimport { SharedService } from \"src/app/services/shared.service\";\nimport { MessageService } from \"src/app/services/snackBar.service\";\n\n@Component({\n  selector: \"app-recipe-form\",\n  templateUrl: \"./recipe-form.component.html\",\n  styleUrls: [\"./recipe-form.component.scss\"],\n})\nexport class RecipeFormComponent implements OnInit {\n  recipeForm!: FormGroup;\n  errorMsg!: string;\n  mode!: string;\n  recipeId!: string;\n  loading!: boolean;\n  recipeBook!: Recipe;\n  recipeBook$!: Observable<Recipe>;\n  ingredientListControls: FormControl[] = [];\n  recipeListControls: FormControl[] = [];\n  dietbookListControls: FormControl[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private recipeService: RecipeService,\n    private route: ActivatedRoute,\n    private dietBooks: DietBooksService,\n    private sharedService: SharedService,\n    private messageService: MessageService\n  ) {}\n\n  ngOnInit() {\n    this.loading = true;\n    this.recipeId = this.route.snapshot.queryParams[\"recipeId\"];\n\n    this.route.queryParams\n      .pipe(\n        switchMap((params) => {\n          if (!this.recipeId) {\n            this.mode = \"new\";\n            this.loading = false;\n            this.initEmptyForm();\n            this.sharedService.setTextHeader(`Nouvelle Recette`);\n            return EMPTY;\n          } else {\n            this.mode = \"edit\";\n            this.sharedService.setTextHeader(`Recette N° ${this.recipeId}`);\n            return this.recipeService.getRecipeById(params[\"recipeId\"]);\n          }\n        }),\n        tap((recipe) => {\n          if (recipe) {\n            this.recipeBook = recipe;\n            console.log(this.recipeBook);\n            this.loading = false;\n            this.initModifyForm(this.recipeBook);\n          }\n        }),\n        catchError((error) => (this.errorMsg = JSON.stringify(error)))\n      )\n      .subscribe();\n  }\n\n  initEmptyForm() {\n    this.recipeForm = this.formBuilder.group({\n      title: new FormControl(\"\", Validators.required),\n      dietBookIds: this.formBuilder.array([]),\n      ingredients: this.formBuilder.array([]),\n      recipe: this.formBuilder.array([]),\n      preparationTime: new FormControl(null),\n      cookingTime: new FormControl(null),\n      breakTime: new FormControl(null),\n      online: new FormControl(false),\n      id: new FormControl(0),\n    });\n  }\n  addIngredient() {\n    const newIngredientControl = this.formBuilder.control(\"\");\n    this.ingredientListControls.push(newIngredientControl);\n    (this.recipeForm.get(\"ingredients\") as FormArray).push(\n      newIngredientControl\n    );\n  }\n\n  removeIngredient(index: number) {\n    this.ingredientListControls.splice(index, 1);\n    (this.recipeForm.get(\"ingredients\") as FormArray).removeAt(index);\n  }\n\n  addRecipe() {\n    const newRecipeControl = this.formBuilder.control(\"\");\n    this.recipeListControls.push(newRecipeControl);\n    (this.recipeForm.get(\"recipe\") as FormArray).push(newRecipeControl);\n  }\n\n  removeRecipe(index: number) {\n    this.recipeListControls.splice(index, 1);\n    (this.recipeForm.get(\"recipe\") as FormArray).removeAt(index);\n  }\n\n  addDietbook() {\n    const newDietbookControl = this.formBuilder.control(\"\");\n    this.dietbookListControls.push(newDietbookControl);\n    (this.recipeForm.get(\"dietbookIds\") as FormArray).push(newDietbookControl);\n  }\n\n  removeDietbook(index: number) {\n    this.dietbookListControls.splice(index, 1);\n    (this.recipeForm.get(\"dietbookIds\") as FormArray).removeAt(index);\n  }\n\n  initModifyForm(recipebook: Recipe) {\n    this.recipeForm = this.formBuilder.group({\n      id: recipebook.id,\n      title: recipebook.title,\n      dietbookIds: this.formBuilder.array(recipebook.dietbookIds),\n      ingredients: this.formBuilder.array(recipebook.ingredients),\n      recipe: this.formBuilder.array(recipebook.recipe),\n      preparationTime: recipebook.preparationTime ?? 0,\n      cookingTime: recipebook.cookingTime ?? 0,\n      breakTime: recipebook.breakTime ?? 0,\n      pics: recipebook.pics ?? [],\n      online: !!recipebook.online ?? false,\n      customerId: recipebook.customerId ?? [],\n    });\n    console.log(\"Recipe Form after Initialization: \", this.recipeForm.value);\n  }\n  onSubmitForm() {\n    this.loading = true;\n    // if (this.recipeForm.value.stage !== this.selectedStages) {\n    //   this.dietMealForm.patchValue({ stage: [] });\n    // }\n    // this.dietMealForm.patchValue({\n    //   stage: this.selectedStages.sort((a, b) => a - b),\n    // });\n    // if (this.dietMealForm.value.typeMeal !== \"Collation\") {\n    //   this.dietMealForm.patchValue({ collation: \"\" });\n    // }\n    const ingredientsListValues = this.ingredientListControls.map(\n      (control) => control.value\n    );\n    const recipesListValues = this.recipeListControls.map(\n      (control) => control.value\n    );\n    const dietbooksListValues = this.dietbookListControls.map(\n      (control) => control.value\n    );\n\n    const newRecipe = {\n      id: this.recipeForm.get(\"id\")!.value,\n      title: this.recipeForm.get(\"title\")!.value,\n      dietbookIds: dietbooksListValues,\n      ingredients: ingredientsListValues,\n      recipe: recipesListValues,\n      preparationTime: this.recipeForm.get(\"preparationTime\")!.value,\n      cookingTime: this.recipeForm.get(\"cookingTime\")!.value,\n      breakTime: this.recipeForm.get(\"breakTime\")!.value,\n      pics: this.recipeForm.get(\"pics\")!.value,\n      online: this.recipeForm.get(\"online\")!.value,\n      customerId: this.recipeForm.get(\"customerId\")!.value,\n    };\n\n    if (this.mode === \"new\") {\n      this.recipeService\n        .addRecipe(newRecipe)\n        .pipe(\n          tap(() => {\n            this.loading = false;\n            this.messageService.showMessage(\"Le repas a bien été créé\");\n            this.router.navigateByUrl(`recipebooks`);\n          }),\n          catchError((error) => {\n            console.error(error);\n            this.loading = false;\n            this.messageService.showErrorMessage(\n              \"Une erreur est survenue lors de la création\"\n            );\n            this.errorMsg = error.message;\n            return EMPTY;\n          })\n        )\n        .subscribe();\n    } else if (this.mode === \"edit\") {\n      this.recipeService\n        .modifyRecipe(this.recipeId, newRecipe)\n        .pipe(\n          tap(() => {\n            this.loading = false;\n            this.messageService.showMessage(\"Le repas a bien été modifié\");\n            this.router.navigateByUrl(`recipebooks`);\n          }),\n          catchError((error) => {\n            console.error(error);\n            this.loading = false;\n            this.messageService.showErrorMessage(\n              \"Une erreur est survenue lors de la modification\"\n            );\n            this.errorMsg = error.message;\n            return EMPTY;\n          })\n        )\n        .subscribe();\n    }\n  }\n}\n","<h6>{{ this.mode }}</h6>\n<form *ngIf=\"recipeForm\" [formGroup]=\"recipeForm\">\n  <div class=\"row_entire\">\n    <div class=\"border col\">\n      <div class=\"border col3\">\n        <div class=\"form-group\">\n          <label for=\"title\">Titre</label>\n          <input id=\"title\" type=\"text\" formControlName=\"title\" />\n        </div>\n      </div>\n      <div class=\"border col3\">\n        <div formArrayName=\"ingredients\">\n          <button type=\"button\" (click)=\"addIngredient()\">\n            Ajouter un ingrédient\n          </button>\n          <div\n            *ngFor=\"\n              let ingredientControl of ingredientListControls;\n              let i = index\n            \"\n          >\n            <div class=\"form-group ingredients\">\n              <label for=\"ingredient{{ i }}\">Ingredient {{ i + 1 }}</label>\n              <input\n                class=\"ingredientInput\"\n                autofocus\n                type=\"text\"\n                [formControlName]=\"i\"\n                appAutofocus\n              />\n              <button type=\"button\" (click)=\"removeIngredient(i)\">-</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"border col3\"></div>\n      <div class=\"border col3\"></div>\n      <div class=\"border col3\"></div>\n    </div>\n    <div class=\"border col1\"></div>\n  </div>\n  <div class=\"action-buttons\">\n    <button type=\"submit\" (click)=\"onSubmitForm()\">Enregistrer</button>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}