{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet ArrayDietmealComponent = class ArrayDietmealComponent {\n  constructor(route, router, dietBookService, mealService) {\n    this.route = route;\n    this.router = router;\n    this.dietBookService = dietBookService;\n    this.mealService = mealService;\n    this.dietbook = null;\n    this.dietMeals = [];\n    this.dietMealsByStage = {};\n    this.mealOrder = [\"Petit-déjeuner\", \"Collation am\", \"Déjeuner\", \"Collation 1\", \"Collation 2\", \"Diner\"];\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.dietId = params[\"dietId\"];\n      this.dietBookService.getDietBookById(this.dietId).subscribe(dietbook => {\n        this.dietbook = dietbook;\n        if (dietbook.meal) {\n          this.loadDietMeals(dietbook.meal);\n        }\n      });\n    });\n  }\n  loadDietMeals(dietMealIds) {\n    for (const id of dietMealIds) {\n      this.mealService.getMealById(id).subscribe(meal => {\n        this.dietMeals.push(meal);\n        this.organizeMealsByStage();\n      });\n    }\n  }\n  organizeMealsByStage() {\n    // Organise les meals par stage dans dietMealsByStage\n    this.dietMealsByStage = {};\n    for (const meal of this.dietMeals) {\n      for (const stage of meal.stage) {\n        if (!this.dietMealsByStage[stage]) {\n          this.dietMealsByStage[stage] = [];\n        }\n        this.dietMealsByStage[stage].push(meal);\n      }\n    }\n    // Trie les meals dans l'ordre de mealOrder\n    for (const stage in this.dietMealsByStage) {\n      if (this.dietMealsByStage.hasOwnProperty(stage)) {\n        this.dietMealsByStage[stage].sort((a, b) => {\n          let nameA = this.getMealSortName(a);\n          let nameB = this.getMealSortName(b);\n          return this.mealOrder.indexOf(nameA) - this.mealOrder.indexOf(nameB);\n        });\n      }\n    }\n  }\n  getRange(nbStage) {\n    return Array(nbStage).fill(0).map((_, index) => index + 1);\n  }\n  //renomme les collations am-pm1-pm2\n  getMealSortName(meal) {\n    let name = meal.typeMeal;\n    let collation = meal.collation;\n    if (meal.typeMeal === \"Collation\") {\n      if (collation === \"pm1\") {\n        name += \" 1\";\n      } else if (collation === \"pm2\") {\n        name += \" 2\";\n      } else {\n        name += \" \" + collation;\n      }\n    }\n    return name;\n  }\n  getMealDisplayName(meal) {\n    let name = meal.typeMeal;\n    let collation = meal.collation;\n    if (meal.typeMeal === \"Collation\") {\n      if (collation === \"pm1\") {\n        name += \" 1\";\n      } else if (collation === \"pm2\") {\n        name += \" 2\";\n      } else {\n        name += \" \" + collation;\n      }\n    }\n    return name;\n  }\n  onViewMealForm(id) {\n    this.activeButtonMeal = id;\n    this.router.navigateByUrl(`dietbook?dietId=${this.dietId}&mealId=${id}`);\n  }\n};\nArrayDietmealComponent = __decorate([Component({\n  selector: \"app-array-dietmeal\",\n  templateUrl: \"./array-dietmeal.component.html\",\n  styleUrls: [\"./array-dietmeal.component.scss\"]\n})], ArrayDietmealComponent);\nexport { ArrayDietmealComponent };","map":{"version":3,"mappings":"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","names":["Component","ArrayDietmealComponent","constructor","route","router","dietBookService","mealService","ngOnInit","queryParams","subscribe","params","dietId","getDietBookById","dietbook","meal","loadDietMeals","dietMealIds","id","getMealById","dietMeals","push","organizeMealsByStage","dietMealsByStage","stage","hasOwnProperty","sort","a","b","nameA","getMealSortName","nameB","mealOrder","indexOf","getRange","nbStage","Array","fill","map","_","index","name","typeMeal","collation","getMealDisplayName","onViewMealForm","activeButtonMeal","navigateByUrl","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/core/array-dietmeal/array-dietmeal.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DietBooksService } from \"src/app/services/diet-book.service\";\nimport { mealService } from \"src/app/services/meal.service\";\nimport { DietBook } from \"src/app/models/diet.model\";\nimport { Meal } from \"src/app/models/meal.model\";\n\n@Component({\n  selector: \"app-array-dietmeal\",\n  templateUrl: \"./array-dietmeal.component.html\",\n  styleUrls: [\"./array-dietmeal.component.scss\"],\n})\nexport class ArrayDietmealComponent implements OnInit {\n  dietbook: DietBook | null = null;\n  dietMeals: Meal[] = [];\n  dietMealsByStage: { [stage: number]: Meal[] } = {};\n  dietId!: string;\n  activeButtonMeal!: string;\n  mealOrder: string[] = [\n    \"Petit-déjeuner\",\n    \"Collation am\",\n    \"Déjeuner\",\n    \"Collation 1\",\n    \"Collation 2\",\n    \"Diner\",\n  ];\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private dietBookService: DietBooksService,\n    private mealService: mealService\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      this.dietId = params[\"dietId\"];\n\n      this.dietBookService\n        .getDietBookById(this.dietId)\n        .subscribe((dietbook) => {\n          this.dietbook = dietbook;\n          if (dietbook.meal) {\n            this.loadDietMeals(dietbook.meal);\n          }\n        });\n    });\n  }\n\n  loadDietMeals(dietMealIds: string[]): void {\n    for (const id of dietMealIds) {\n      this.mealService.getMealById(id).subscribe((meal) => {\n        this.dietMeals.push(meal);\n        this.organizeMealsByStage();\n      });\n    }\n  }\n  organizeMealsByStage(): void {\n    // Organise les meals par stage dans dietMealsByStage\n    this.dietMealsByStage = {};\n    for (const meal of this.dietMeals) {\n      for (const stage of meal.stage) {\n        if (!this.dietMealsByStage[stage]) {\n          this.dietMealsByStage[stage] = [];\n        }\n        this.dietMealsByStage[stage].push(meal);\n      }\n    }\n    // Trie les meals dans l'ordre de mealOrder\n    for (const stage in this.dietMealsByStage) {\n      if (this.dietMealsByStage.hasOwnProperty(stage)) {\n        this.dietMealsByStage[stage].sort((a, b) => {\n          let nameA = this.getMealSortName(a);\n          let nameB = this.getMealSortName(b);\n\n          return this.mealOrder.indexOf(nameA) - this.mealOrder.indexOf(nameB);\n        });\n      }\n    }\n  }\n\n  getRange(nbStage: number): number[] {\n    return Array(nbStage)\n      .fill(0)\n      .map((_, index) => index + 1);\n  }\n  //renomme les collations am-pm1-pm2\n  getMealSortName(meal: Meal) {\n    let name = meal.typeMeal;\n    let collation = meal.collation;\n\n    if (meal.typeMeal === \"Collation\") {\n      if (collation === \"pm1\") {\n        name += \" 1\";\n      } else if (collation === \"pm2\") {\n        name += \" 2\";\n      } else {\n        name += \" \" + collation;\n      }\n    }\n\n    return name;\n  }\n  getMealDisplayName(meal: Meal): string {\n    let name = meal.typeMeal;\n    let collation = meal.collation;\n\n    if (meal.typeMeal === \"Collation\") {\n      if (collation === \"pm1\") {\n        name += \" 1\";\n      } else if (collation === \"pm2\") {\n        name += \" 2\";\n      } else {\n        name += \" \" + collation;\n      }\n    }\n\n    return name;\n  }\n\n  onViewMealForm(id: string) {\n    this.activeButtonMeal = id;\n    this.router.navigateByUrl(`dietbook?dietId=${this.dietId}&mealId=${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}