{"ast":null,"code":"import { catchError, Subject, throwError } from \"rxjs\";\nimport { map, switchMap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class DietBooksService {\n  constructor(http, auth) {\n    this.http = http;\n    this.auth = auth;\n    this.dietbooks$ = new Subject();\n  }\n  getAllDietBooks() {\n    return this.http.get(\"http://localhost:5400/api/dietbooks\");\n  }\n  getDietBookById(id) {\n    return this.http.get(`http://localhost:5400/api/dietbooks/${id}`);\n  }\n  modifyDietBook(id, dietBook) {\n    return this.http.put(`http://localhost:5400/api/dietbooks/modify-diet_book/${id}`, dietBook).pipe(catchError(error => throwError(error.error.message)));\n  }\n  addDietBook(formValue) {\n    return this.getAllDietBooks().pipe(map(dietBooks => ({\n      ...formValue\n    })), switchMap(newDietBook => this.http.post(\"http://localhost:5400/api/dietbooks/add_diet_book\", newDietBook)));\n  }\n  static #_ = this.ɵfac = function DietBooksService_Factory(t) {\n    return new (t || DietBooksService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DietBooksService,\n    factory: DietBooksService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,EAAkBC,OAAO,EAAEC,UAAU,QAAQ,MAAM;AACtE,SAASC,GAAG,EAAEC,SAAS,QAAa,gBAAgB;;;;AAQpD,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB,EAAUC,IAAiB;IAA3C,SAAI,GAAJD,IAAI;IAAsB,SAAI,GAAJC,IAAI;IAFlD,eAAU,GAAG,IAAIP,OAAO,EAAc;EAE4B;EAElEQ,eAAe;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,qCAAqC,CAAC;EACzE;EAEAC,eAAe,CAACC,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAW,uCAAuCE,EAAE,EAAE,CAAC;EAC7E;EAEAC,cAAc,CAACD,EAAU,EAAEE,QAAkB;IAC3C,OAAO,IAAI,CAACP,IAAI,CACbQ,GAAG,CACF,wDAAwDH,EAAE,EAAE,EAC5DE,QAAQ,CACT,CACAE,IAAI,CAAChB,UAAU,CAAEiB,KAAK,IAAKf,UAAU,CAACe,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;EACjE;EAEAC,WAAW,CAACC,SAWX;IACC,OAAO,IAAI,CAACX,eAAe,EAAE,CAACO,IAAI,CAChCb,GAAG,CAAEkB,SAAS,KAAM;MAClB,GAAGD;KACJ,CAAC,CAAC,EACHhB,SAAS,CAAEkB,WAAW,IACpB,IAAI,CAACf,IAAI,CAACgB,IAAI,CACZ,mDAAmD,EACnDD,WAAW,CACZ,CACF,CACF;EACH;EAAC;qBA7CUjB,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAmB,SAAhBnB,gBAAgB;IAAAoB,YAFf;EAAM","names":["catchError","Subject","throwError","map","switchMap","DietBooksService","constructor","http","auth","getAllDietBooks","get","getDietBookById","id","modifyDietBook","dietBook","put","pipe","error","message","addDietBook","formValue","dietBooks","newDietBook","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/services/diet-book.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { catchError, Observable, of, Subject, throwError } from \"rxjs\";\nimport { map, switchMap, tap } from \"rxjs/operators\";\nimport { DietBook } from \"../models/diet.model\";\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DietBooksService {\n  dietbooks$ = new Subject<DietBook[]>();\n\n  constructor(private http: HttpClient, private auth: AuthService) {}\n\n  getAllDietBooks(): Observable<DietBook[]> {\n    return this.http.get<DietBook[]>(\"http://localhost:5400/api/dietbooks\");\n  }\n\n  getDietBookById(id: string): Observable<DietBook> {\n    return this.http.get<DietBook>(`http://localhost:5400/api/dietbooks/${id}`);\n  }\n\n  modifyDietBook(id: string, dietBook: DietBook) {\n    return this.http\n      .put<{ message: string }>(\n        `http://localhost:5400/api/dietbooks/modify-diet_book/${id}`,\n        dietBook\n      )\n      .pipe(catchError((error) => throwError(error.error.message)));\n  }\n\n  addDietBook(formValue: {\n    id: string;\n    title: string;\n    pathology: string;\n    sexe: string;\n    nbStage: number;\n    nbWeekPerStage: number;\n    description: string;\n    meal?: [string];\n    customerId: [string];\n    online: boolean;\n  }): Observable<DietBook> {\n    return this.getAllDietBooks().pipe(\n      map((dietBooks) => ({\n        ...formValue,\n      })),\n      switchMap((newDietBook) =>\n        this.http.post<DietBook>(\n          \"http://localhost:5400/api/dietbooks/add_diet_book\",\n          newDietBook\n        )\n      )\n    );\n  }\n\n  // getAllMealId(dietId: string): Observable<DietBook> {\n  //   return this.getDietBookById(dietId).pipe(\n  //     map((dietbook: DietBook) => {\n  //       if (dietbook.meal && dietbook.meal.length > 0) {\n  //         // Mapping meal Ids to meals array\n  //         dietbook.meal = dietbook.meal.map((mealId) => ({ id: mealId }));\n  //       }\n\n  //       return dietbook;\n  //     })\n  //   );\n  // }\n}\n\n// addDietBook(formValue: {\n//   id: string;\n//   title: string;\n//   pathology: string;\n//   sexe: string;\n//   nbStage: number;\n//   nbWeekPerStage: number;\n//   description: string;\n//   meal?: [string];\n// }): Observable<DietBook> {\n//   return this.getAllDietBooks().pipe(\n//     map((dietBooks) => [...dietBooks].sort((a, b) => a.id - b.id)),\n//     map((sortedDietBooks) => sortedDietBooks[sortedDietBooks.length - 1]),\n//     map((previousDietBooks) => ({\n//       ...formValue,\n//       id: +previousDietBooks.id + 1,\n//     })),\n//     switchMap((newDietBook) =>\n//       this.http.post<DietBook>(\n//         \"http://localhost:5400/api/dietbooks/add_diet_book\",\n//         newDietBook\n//       )\n//     )\n//   );\n// }\n// }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}