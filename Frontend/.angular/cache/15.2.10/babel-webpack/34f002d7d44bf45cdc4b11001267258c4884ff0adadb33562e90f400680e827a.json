{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AutofocusDirective {\n  constructor(el, renderer) {\n    this.el = el;\n    this.renderer = renderer;\n  }\n  ngAfterViewInit() {\n    const collationListControls = this.el.nativeElement.parentElement.parentElement.querySelectorAll(\".form-group input\");\n    if (collationListControls.length > 0) {\n      const lastInput = collationListControls[collationListControls.length - 1];\n      this.renderer.selectRootElement(lastInput).focus();\n    }\n  }\n  static #_ = this.ɵfac = function AutofocusDirective_Factory(t) {\n    return new (t || AutofocusDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: AutofocusDirective,\n    selectors: [[\"\", \"appAutofocus\", \"\"]]\n  });\n}","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,kBAAkB;EAC7BC,YAAoBC,EAAc,EAAUC,QAAmB;IAA3C,OAAE,GAAFD,EAAE;IAAsB,aAAQ,GAARC,QAAQ;EAAc;EAElEC,eAAe;IACb,MAAMC,qBAAqB,GACzB,IAAI,CAACH,EAAE,CAACI,aAAa,CAACC,aAAa,CAACA,aAAa,CAACC,gBAAgB,CAChE,mBAAmB,CACpB;IAEH,IAAIH,qBAAqB,CAACI,MAAM,GAAG,CAAC,EAAE;MACpC,MAAMC,SAAS,GAAGL,qBAAqB,CAACA,qBAAqB,CAACI,MAAM,GAAG,CAAC,CAAC;MACzE,IAAI,CAACN,QAAQ,CAACQ,iBAAiB,CAACD,SAAS,CAAC,CAACE,KAAK,EAAE;;EAEtD;EAAC;qBAbUZ,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAa;EAAA","names":["AutofocusDirective","constructor","el","renderer","ngAfterViewInit","collationListControls","nativeElement","parentElement","querySelectorAll","length","lastInput","selectRootElement","focus","selectors"],"sourceRoot":"","sources":["/Users/ericherduin/Htag/Site Web/BD2 Konect/Frontend/src/app/directive/autofocus.directive.ts"],"sourcesContent":["// autofocus.directive.ts\n\nimport { Directive, ElementRef, AfterViewInit, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective implements AfterViewInit {\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    const collationListControls =\n      this.el.nativeElement.parentElement.parentElement.querySelectorAll(\n        \".form-group input\"\n      );\n\n    if (collationListControls.length > 0) {\n      const lastInput = collationListControls[collationListControls.length - 1];\n      this.renderer.selectRootElement(lastInput).focus();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}